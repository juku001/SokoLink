{
    "openapi": "3.0.0",
    "info": {
        "title": "SokoLink Engine API",
        "description": "The SokoLink Engine API powers the Core Features for the Marketplace activities making a seam less interaction between Sellers, Buyers and Administrators. The documentation comprises the API's for authentication, marketplace , payments , academy, Admin and all the transactions made by the Sellers in the Store.",
        "contact": {
            "name": "SokoLink Support Team",
            "email": "support@sokolink.store"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://api.sokolink.store/api/v1",
            "description": "Live Server"
        },
        {
            "url": "http://localhost:2345/api/v1",
            "description": "Test Server"
        }
    ],
    "paths": {
        "/academy": {
            "get": {
                "tags": [
                    "Academy"
                ],
                "summary": "List all academies with lessons",
                "description": "Retrieve all academies along with their associated lessons.",
                "operationId": "listAcademies",
                "responses": {
                    "200": {
                        "description": "List of academies retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Academy lesson list."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Web Development Bootcamp"
                                                    },
                                                    "subtitle": {
                                                        "type": "string",
                                                        "example": "Learn full-stack development in 12 weeks"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-14T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-14T12:00:00Z"
                                                    },
                                                    "lessons": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "academy_id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "title": {
                                                                    "type": "string",
                                                                    "example": "Introduction to HTML"
                                                                },
                                                                "description": {
                                                                    "type": "string",
                                                                    "example": "Learn the basics of HTML"
                                                                },
                                                                "created_at": {
                                                                    "type": "string",
                                                                    "format": "date-time",
                                                                    "example": "2025-09-14T12:00:00Z"
                                                                },
                                                                "updated_at": {
                                                                    "type": "string",
                                                                    "format": "date-time",
                                                                    "example": "2025-09-14T12:00:00Z"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Academy"
                ],
                "summary": "Create a new academy",
                "description": "Allows creation of a new academy with a title and subtitle.",
                "operationId": "storeAcademy",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "subtitle"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Web Development Bootcamp"
                                    },
                                    "subtitle": {
                                        "type": "string",
                                        "example": "Learn full-stack development in 12 weeks"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Academy added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Academy added successful"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Web Development Bootcamp"
                                                },
                                                "subtitle": {
                                                    "type": "string",
                                                    "example": "Learn full-stack development in 12 weeks"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-14T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-14T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to validate fields"
                                        },
                                        "errors": {
                                            "properties": {
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title field is required."
                                                    }
                                                },
                                                "subtitle": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The subtitle field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                }
            }
        },
        "/academy/{id}": {
            "get": {
                "tags": [
                    "Academy"
                ],
                "summary": "Get details of a specific academy",
                "description": "Retrieve details of a single academy along with its lessons.",
                "operationId": "getAcademy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the academy to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Academy details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Academy details"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Web Development Bootcamp"
                                                },
                                                "subtitle": {
                                                    "type": "string",
                                                    "example": "Learn full-stack development in 12 weeks"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-14T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-14T12:00:00Z"
                                                },
                                                "lessons": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "academy_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Introduction to HTML"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Learn the basics of HTML"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-09-14T12:00:00Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-09-14T12:00:00Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Academy not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Academy not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Academy"
                ],
                "summary": "Update an existing academy",
                "description": "Update the title and subtitle of a specific academy.",
                "operationId": "updateAcademy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the academy to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Advanced Web Development Bootcamp"
                                    },
                                    "subtitle": {
                                        "type": "string",
                                        "example": "Master full-stack development in 12 weeks"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Academy updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Academy updated successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Advanced Web Development Bootcamp"
                                                },
                                                "subtitle": {
                                                    "type": "string",
                                                    "example": "Master full-stack development in 12 weeks"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-14T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-14T12:30:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Academy not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Academy not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Academy"
                ],
                "summary": "Delete an academy",
                "description": "Delete a specific academy and all its associated lessons.",
                "operationId": "deleteAcademy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the academy to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Academy deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Academy deleted successful."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Academy not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Academy not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/academy/{id}/lessons": {
            "post": {
                "tags": [
                    "Academy"
                ],
                "summary": "Add a lesson to an academy",
                "description": "Create a new lesson under a specific academy",
                "operationId": "addAcademyLesson",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the academy",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Introduction to Laravel"
                                    },
                                    "subtitle": {
                                        "type": "string",
                                        "example": "Getting started with Laravel basics"
                                    },
                                    "instructor": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "video_location": {
                                        "type": "string",
                                        "enum": [
                                            "online",
                                            "stored"
                                        ],
                                        "example": "online"
                                    },
                                    "video": {
                                        "type": "string",
                                        "example": "https://youtube.com/example"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Lesson added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson added successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Academy not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Academy not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                }
            }
        },
        "/academy/lessons/{id}": {
            "get": {
                "tags": [
                    "Academy"
                ],
                "summary": "Get a single lesson by ID",
                "description": "Retrieve details of a specific lesson in the academy",
                "operationId": "getAcademyLesson",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the lesson",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lesson details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson details"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Lesson not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Academy"
                ],
                "summary": "Update a lesson by ID",
                "description": "Update details of an existing lesson in the academy",
                "operationId": "updateAcademyLesson",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the lesson to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Lesson Title"
                                    },
                                    "subtitle": {
                                        "type": "string",
                                        "example": "Updated Subtitle"
                                    },
                                    "instructor": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "video_location": {
                                        "type": "string",
                                        "enum": [
                                            "online",
                                            "stored"
                                        ],
                                        "example": "online"
                                    },
                                    "video": {
                                        "type": "string",
                                        "example": "https://youtube.com/..."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Lesson updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson updated successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Lesson not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Academy"
                ],
                "summary": "Delete a lesson by ID",
                "description": "Deletes a lesson from the academy",
                "operationId": "deleteAcademyLesson",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the lesson to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lesson deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson successfully deleted"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Lesson not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                }
            }
        },
        "/admin/merchants": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get list of all merchants",
                "description": "Returns all merchants with details like email, status, revenue, and join date",
                "operationId": "56688b538ae42b9364ecc9fe7692d571",
                "responses": {
                    "200": {
                        "description": "Merchant list retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Merchant List"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Best Store"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "merchant@example.com"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "active"
                                                    },
                                                    "revenue": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 12500
                                                    },
                                                    "joined": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-01-10T12:34:56"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/merchants/{id}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get details of a single merchant",
                "description": "Returns a merchant's full details including user info, products, reviews, sales, category, and followers",
                "operationId": "9c5683c9f611b913c7f3f5af53d452ae",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the merchant",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Merchant details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store details"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Best Store"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "merchant@example.com"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-01-10T12:34:56"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "products": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 101
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Product 1"
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 2500
                                                            },
                                                            "quantity": {
                                                                "type": "integer",
                                                                "example": 10
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "reviews": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 501
                                                            },
                                                            "rating": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 4.5
                                                            },
                                                            "comment": {
                                                                "type": "string",
                                                                "example": "Great store!"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "sales": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1001
                                                            },
                                                            "amount": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 5000
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "completed"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "category": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Electronics"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "followers": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 2001
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Alice"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/performing/merchants": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Top performing merchants",
                "description": "Retrieve the top performing merchants for the current month with revenue growth compared to last month.",
                "operationId": "topPerformingMerchants",
                "responses": {
                    "200": {
                        "description": "List of top performing merchants",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Top 5 performing merchants this month"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "store": {
                                                        "type": "string",
                                                        "example": "Tech Store"
                                                    },
                                                    "category": {
                                                        "type": "string",
                                                        "example": "Electronics"
                                                    },
                                                    "amount": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 1250000.5
                                                    },
                                                    "percent": {
                                                        "properties": {
                                                            "value": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 20.5
                                                            },
                                                            "nature": {
                                                                "type": "string",
                                                                "example": "positive"
                                                            },
                                                            "duration": {
                                                                "type": "string",
                                                                "example": "month"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/payments": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get list of payments",
                "description": "Returns a paginated list of payments with optional filters: search, payment_method, merchant, status",
                "operationId": "ae027ef11ac4a1056d49cbe7a896a95e",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by transaction ID or reference",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payment_method",
                        "in": "query",
                        "description": "Filter by payment method display name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "merchant",
                        "in": "query",
                        "description": "Filter by merchant/store name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by payment status (e.g., success, failed)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of payments retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of all payments"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "ref": {
                                                                "type": "string",
                                                                "example": "REF12345"
                                                            },
                                                            "txn_id": {
                                                                "type": "string",
                                                                "example": "TXN98765"
                                                            },
                                                            "amount": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 2500
                                                            },
                                                            "merchant": {
                                                                "type": "string",
                                                                "example": "Best Store"
                                                            },
                                                            "method": {
                                                                "type": "string",
                                                                "example": "PayPal"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "success"
                                                            },
                                                            "time": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-09-16T12:34:56"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "pagination": {
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 50
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 500
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/payments/{id}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get payment details",
                "description": "Retrieve details of a single payment including store, user, order, payment method, and payment option",
                "operationId": "b371b16eaeddbf4c591f6f9672292f93",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the payment",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment details"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 2500
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "success"
                                                },
                                                "ref": {
                                                    "type": "string",
                                                    "example": "REF12345"
                                                },
                                                "txn_id": {
                                                    "type": "string",
                                                    "example": "TXN98765"
                                                },
                                                "store": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Best Store"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "order": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1001
                                                        },
                                                        "status": {
                                                            "type": "string",
                                                            "example": "completed"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "paymentMethod": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "display": {
                                                            "type": "string",
                                                            "example": "PayPal"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "paymentOption": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "display": {
                                                            "type": "string",
                                                            "example": "Credit Card"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/reports/sales": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get sales volume stats",
                "description": "Returns total sales for the current month and breakdown per category",
                "operationId": "5398cc84f0b62e97829601407ae4a138",
                "responses": {
                    "200": {
                        "description": "Sales data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sales volume stats"
                                        },
                                        "data": {
                                            "properties": {
                                                "total": {
                                                    "properties": {
                                                        "value": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 125000.5
                                                        },
                                                        "percent": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 12.5
                                                        },
                                                        "duration": {
                                                            "type": "string",
                                                            "example": "month"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "categories": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Electronics"
                                                            },
                                                            "total_sales": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 50000
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/reports/user/growth": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get user growth statistics",
                "description": "Returns total users, new users this month, active users this month, and retention rate",
                "operationId": "e2a5004a499f65d4b0e827fa891ffa4f",
                "responses": {
                    "200": {
                        "description": "User growth data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User growth"
                                        },
                                        "data": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 1200
                                                },
                                                "active": {
                                                    "type": "integer",
                                                    "example": 850
                                                },
                                                "new": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "retention_rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 78.5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/manage/users": {
            "get": {
                "tags": [
                    "Admin Manage Users"
                ],
                "summary": "Get list of stores and associated users",
                "description": "Retrieve all stores with related user info. Supports search by store/user name or phone, and filter by user status",
                "operationId": "db54c6d76d46f9969d8247b634777a07",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for store name, user name, or phone",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by user status (active, suspended, inactive)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stores retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Stores retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "store_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "store_name": {
                                                        "type": "string",
                                                        "example": "My Store"
                                                    },
                                                    "store_slug": {
                                                        "type": "string",
                                                        "example": "my-store"
                                                    },
                                                    "joined_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-16T12:00:00"
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 10
                                                    },
                                                    "user_name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "user_mobile": {
                                                        "type": "string",
                                                        "example": "+255123456789"
                                                    },
                                                    "user_status": {
                                                        "type": "string",
                                                        "example": "active"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Manage Users"
                ],
                "summary": "Create a new store and user",
                "description": "Creates a new user (seller) and associated store",
                "operationId": "3de48f246db16ebe37e2eb7b7e51fcfe",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "phone": {
                                        "type": "string",
                                        "example": "+255712345678"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "store_name": {
                                        "type": "string",
                                        "example": "John's Store"
                                    },
                                    "store_email": {
                                        "type": "string",
                                        "example": "store@example.com"
                                    },
                                    "store_phone": {
                                        "type": "string",
                                        "example": "+255712345678"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Store description"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main Street"
                                    },
                                    "region_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Store added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store added successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "store": {
                                                    "type": "object"
                                                },
                                                "user": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/manage/users/{id}": {
            "get": {
                "tags": [
                    "Admin Manage Users"
                ],
                "summary": "Get store details",
                "description": "Retrieve a specific store and associated user info by store ID",
                "operationId": "17cc2862fd2c9c74013dcc463efcba53",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store details"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin Manage Users"
                ],
                "summary": "Update store and user",
                "description": "Update an existing store and its user",
                "operationId": "1690ba8b0d5e86cf6770f41c95eb91c7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "phone": {
                                        "type": "string",
                                        "example": "+255712345678"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "store_name": {
                                        "type": "string",
                                        "example": "John's Store"
                                    },
                                    "store_email": {
                                        "type": "string",
                                        "example": "store@example.com"
                                    },
                                    "store_phone": {
                                        "type": "string",
                                        "example": "+255712345678"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Store description"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main Street"
                                    },
                                    "region_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Store updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "store": {
                                                    "type": "object"
                                                },
                                                "user": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Manage Users"
                ],
                "summary": "Delete store",
                "description": "Delete a store by its ID",
                "operationId": "e9522ef9e8b97be4ecf7880b59d3db73",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store deleted successful."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/manage/users/{id}/status": {
            "put": {
                "tags": [
                    "Admin Manage Users"
                ],
                "summary": "Update user status",
                "description": "Change status of a user (active, suspended, inactive)",
                "operationId": "f05c84729c0c7e2f594005aaacb50a00",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "description": "Status to set: active, suspended, inactive",
                                        "type": "string",
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User status changed to Active"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/is_auth": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "This API is used to check if the user is authenticated or not. It returns status false if not authenticated.",
                "operationId": "c811342ee26fa06f4ded4fadc5ccd971",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Revokes the currently authenticated user's access token and logs them out.",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successful."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/auth/verified/email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Check if a user's email is verified",
                "description": "Validates the provided email and returns whether the user has a non-null email_verified_at.",
                "operationId": "isVerifiedEmail",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com",
                                        "description": "User's email address"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User verified."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User can't be found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not verified."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },
        "/auth/verified/mobile": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Check if a user's mobile number is verified",
                "description": "Validates the provided mobile and returns whether the user has a non-null phone_verified_at.",
                "operationId": "isVerifiedMobile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "mobile"
                                ],
                                "properties": {
                                    "mobile": {
                                        "type": "string",
                                        "example": "+255712345678",
                                        "description": "User's phone number"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User verified."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User can't be found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not verified."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },
        "/be/seller": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update seller payout details",
                "operationId": "7f43890aa4d747242d9c8c4c0fddb7f7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "payout_account",
                                    "payout_method"
                                ],
                                "properties": {
                                    "payout_account": {
                                        "type": "string",
                                        "example": "mpesa-254700123456"
                                    },
                                    "payout_method": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Seller details updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Seller details updated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not a seller or database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not a seller or database error."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Convert buyer account to seller",
                "description": "Allows an authenticated user to become a seller by providing payout account details and payout method.",
                "operationId": "2af99635470def7b53b7c9cc38b712c0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "payout_account",
                                    "payout_method"
                                ],
                                "properties": {
                                    "payout_account": {
                                        "type": "string",
                                        "example": "255XXXXXXXXX"
                                    },
                                    "payout_method": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Account set to seller successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account set to seller."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/carts": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get cart summary",
                "description": "Returns the authenticated buyer's cart with items, subtotal, shipping and total.",
                "operationId": "bf4fcfa5c4963324af8f7c4709190694",
                "responses": {
                    "200": {
                        "description": "Cart summary",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "properties": {
                                                "subtotal": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "total": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "shipping": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "products": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "product_name": {
                                                                "type": "string"
                                                            },
                                                            "store_name": {
                                                                "type": "string"
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "format": "float"
                                                            },
                                                            "quantity": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add product to cart",
                "operationId": "4166fd0418f4557cdaaf8dfcc29eb00d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "quantity"
                                ],
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": 12
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product added to cart"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/carts/{itemId}": {
            "patch": {
                "tags": [
                    "Cart"
                ],
                "summary": "Update quantity of a cart item",
                "operationId": "8f8bdadddd1975d9a2a3323343d19028",
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "ID of the cart item",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "quantity"
                                ],
                                "properties": {
                                    "quantity": {
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cart item updated"
                    },
                    "404": {
                        "description": "Cart item not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/carts/{cartId}/add/{productId}/increment": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Increment quantity of a product in the cart",
                "operationId": "9147453322696344a8ed87bc0df3feee",
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product quantity incremented"
                    },
                    "404": {
                        "description": "Cart or product not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/carts/{cartId}/remove/{productId}/decrement": {
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Decrement quantity or remove product from cart",
                "operationId": "152d6e73f85d75abac5cd7ca5f344b93",
                "parameters": [
                    {
                        "name": "cartId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product quantity decremented or removed"
                    },
                    "404": {
                        "description": "Cart or product not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories with store counts",
                "description": "Fetches all categories and includes the number of stores associated with each category.",
                "operationId": "getCategories",
                "responses": {
                    "200": {
                        "description": "List of categories with store counts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Categories with store counts"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Electronics"
                                                    },
                                                    "slug": {
                                                        "type": "string",
                                                        "example": "electronics"
                                                    },
                                                    "parent_id": {
                                                        "type": "integer",
                                                        "example": null,
                                                        "nullable": true
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "example": "images/link_to/cat.png"
                                                    },
                                                    "icon": {
                                                        "type": "string",
                                                        "example": "🍽️",
                                                        "nullable": true
                                                    },
                                                    "is_active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "stores_count": {
                                                        "type": "integer",
                                                        "example": 25
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "description": "Creates a new category with optional parent, icon, and image upload.",
                "operationId": "storeCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Electronics"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "🍽️",
                                        "nullable": true
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category added successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Electronics"
                                                },
                                                "slug": {
                                                    "type": "string",
                                                    "example": "electronics"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "https://images/categories/some.png"
                                                },
                                                "parent_id": {
                                                    "type": "integer",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "icon": {
                                                    "type": "string",
                                                    "example": "🍽️",
                                                    "nullable": true
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category details",
                "description": "Fetches the details of a specific category by ID.",
                "operationId": "getCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "category details"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Electronics"
                                                },
                                                "slug": {
                                                    "type": "string",
                                                    "example": "electronics"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "https://images/categories/some.png"
                                                },
                                                "parent_id": {
                                                    "type": "integer",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "icon": {
                                                    "type": "string",
                                                    "example": "🍽️"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "description": "Update an existing category by its ID.",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Electronics"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "🍽️",
                                        "nullable": true
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "example": null,
                                        "nullable": true
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category updated successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Updated Electronics"
                                                },
                                                "slug": {
                                                    "type": "string",
                                                    "example": "updated-electronics"
                                                },
                                                "icon": {
                                                    "type": "string",
                                                    "example": "🍽️"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "https://images/categories/some.png"
                                                },
                                                "parent_id": {
                                                    "type": "integer",
                                                    "example": 2,
                                                    "nullable": true
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "description": "Delete a category by its ID.",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "category successfully delted"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/categories/{id}/stores": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get stores under a category",
                "description": "Retrieve all stores belonging to a specific category by its ID.",
                "operationId": "getCategoryStores",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stores retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": ""
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Electronics"
                                                },
                                                "stores": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Store"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories/{id}/children": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get child categories",
                "description": "Retrieve all categories that have the given category as their parent.",
                "operationId": "getCategoryChildren",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the parent category",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Child categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Categories by parent ID"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Smartphones"
                                                    },
                                                    "slug": {
                                                        "type": "string",
                                                        "example": "smartphones"
                                                    },
                                                    "parent_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "icon": {
                                                        "type": "string",
                                                        "example": "🍽️"
                                                    },
                                                    "is_active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Parent category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/contacts": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Get list of contacts",
                "description": "Retrieve paginated contacts for the authenticated user with optional filters (search, type, group_id).",
                "operationId": "getContacts",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by contact name",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by type (customer, client, supplier)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "customer",
                                "client",
                                "supplier"
                            ],
                            "example": "customer"
                        }
                    },
                    {
                        "name": "group_id",
                        "in": "query",
                        "description": "Filter by group ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contacts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contacts retrieved successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "john@example.com"
                                                            },
                                                            "phone": {
                                                                "type": "string",
                                                                "example": "+123456789"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "customer"
                                                            },
                                                            "group_id": {
                                                                "type": "integer",
                                                                "example": 3
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Create a new contact",
                "description": "Creates a new contact for the authenticated user. Optionally links the contact to a group and assigns tags.",
                "operationId": "createContact",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "mobile",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "mobile": {
                                        "type": "string",
                                        "example": "+255712345678"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "whatsapp": {
                                        "type": "string",
                                        "example": "+255712345678"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "VIP"
                                        }
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "customer",
                                            "client",
                                            "supplier"
                                        ],
                                        "example": "customer"
                                    },
                                    "last_interaction_at": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-09-13"
                                    },
                                    "group_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Contact created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact created successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "mobile": {
                                                    "type": "string",
                                                    "example": "+255712345678"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "whatsapp": {
                                                    "type": "string",
                                                    "example": "+255712345678"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "customer"
                                                },
                                                "last_interaction_at": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-09-13"
                                                },
                                                "group_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/contacts/{id}": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Get a single contact",
                "description": "Retrieve a contact belonging to the authenticated user by its ID.",
                "operationId": "getContactById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contact ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact retrieved"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+123456789"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "customer"
                                                },
                                                "group_id": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Update an existing contact",
                "description": "Updates a contact by ID for the authenticated user. Only provided fields will be updated.",
                "operationId": "updateContact",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the contact to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "mobile": {
                                        "type": "string",
                                        "example": "+255712345678"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "whatsapp": {
                                        "type": "string",
                                        "example": "+255712345678"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "VIP"
                                        }
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "customer",
                                            "client",
                                            "supplier"
                                        ],
                                        "example": "customer"
                                    },
                                    "last_interaction_at": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-09-13"
                                    },
                                    "group_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Contact updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "mobile": {
                                                    "type": "string",
                                                    "example": "+255712345678"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "whatsapp": {
                                                    "type": "string",
                                                    "example": "+255712345678"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "customer"
                                                },
                                                "last_interaction_at": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-09-13"
                                                },
                                                "group_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Delete a contact",
                "description": "Deletes a contact by ID for the authenticated user.",
                "operationId": "deleteContact",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the contact to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact deleted successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/customers": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get list of customers",
                "description": "Retrieve a list of customers with optional search by name, email, or phone",
                "operationId": "32ddaa80e54ddcf2c03d89ef324381b2",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for name, email, or phone",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of customers retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of customers"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "john@example.com"
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "example": "+255123456789"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "active"
                                                    },
                                                    "last_active": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-16T12:34:56"
                                                    },
                                                    "purchases": {
                                                        "type": "integer",
                                                        "example": 5
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/customers/{id}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get customer details",
                "description": "Retrieve detailed information for a specific customer including their payments and orders",
                "operationId": "acd88b6fecb460432d24bc3f123a2a77",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the customer",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer details"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+255123456789"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "payments": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 101
                                                            },
                                                            "amount": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 2500
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "success"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-09-16T12:00:00"
                                                            },
                                                            "order": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 501
                                                                    },
                                                                    "status": {
                                                                        "type": "string",
                                                                        "example": "completed"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/dashboard/contacts/stats": {
            "get": {
                "tags": [
                    "Seller Dashboard"
                ],
                "summary": "Get Contact Stats",
                "operationId": "ea5a3f588da5738aa89e5459d5aef0af",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact Dashboard Stats"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 9
                                                },
                                                "clients": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "customers": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "suppliers": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/dashboard/academy/stats": {
            "get": {
                "tags": [
                    "Seller Dashboard"
                ],
                "summary": "Academy Statistics ",
                "description": "Returns overall stats for academy lessons.",
                "operationId": "085dd232493e26f4c7311515841f977f",
                "responses": {
                    "200": {
                        "description": "Statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Academy statistics"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "videos": {
                                                    "type": "integer",
                                                    "example": 42
                                                },
                                                "ratings": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 4.5
                                                },
                                                "students": {
                                                    "type": "integer",
                                                    "example": 1200
                                                },
                                                "content": {
                                                    "properties": {
                                                        "state": {
                                                            "type": "string",
                                                            "example": "Free"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "All Content"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                }
            }
        },
        "/dashboard/expenses/stats": {
            "get": {
                "tags": [
                    "Seller Dashboard"
                ],
                "summary": "Get expense statistics for the dashboard",
                "description": "Retrieve monthly totals, pending expenses, and average daily expenses for the authenticated seller",
                "operationId": "01d9ffa214e87093a9de5071708a93b3",
                "responses": {
                    "200": {
                        "description": "Expenses dashboard stats retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Expenses dashboard stats"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "total": {
                                                    "properties": {
                                                        "value": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 1250.5
                                                        },
                                                        "percent": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 12.5
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "pending": {
                                                    "properties": {
                                                        "value": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 250
                                                        },
                                                        "count": {
                                                            "type": "integer",
                                                            "example": 3
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "average_daily": {
                                                    "properties": {
                                                        "value": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 41.67
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dashboard/admin/customers": {
            "get": {
                "tags": [
                    "Admin Dashboard"
                ],
                "summary": "Admin customer management dashboard",
                "description": "Returns key buyer statistics for the admin dashboard, including totals, active buyers, and growth trends.",
                "operationId": "adminCustomerManagement",
                "responses": {
                    "200": {
                        "description": "Customer dashboard information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer dashboard information"
                                        },
                                        "data": {
                                            "properties": {
                                                "total": {
                                                    "properties": {
                                                        "value": {
                                                            "description": "Total number of buyers",
                                                            "type": "integer",
                                                            "example": 1200
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "description": "Percentage change vs last month",
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 15.5
                                                                },
                                                                "nature": {
                                                                    "description": "positive|negative",
                                                                    "type": "string",
                                                                    "example": "positive"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "month"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "active": {
                                                    "properties": {
                                                        "value": {
                                                            "description": "Active buyers count",
                                                            "type": "integer",
                                                            "example": 950
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 0
                                                                },
                                                                "nature": {
                                                                    "type": "string",
                                                                    "example": "neutral"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "month"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "growth": {
                                                    "properties": {
                                                        "value": {
                                                            "description": "Growth rate compared to last month",
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 20
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 20
                                                                },
                                                                "nature": {
                                                                    "type": "string",
                                                                    "example": "positive"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "month"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "tickets": {
                                                    "properties": {
                                                        "value": {
                                                            "description": "Support tickets placeholder",
                                                            "type": "integer",
                                                            "example": 0
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 0
                                                                },
                                                                "nature": {
                                                                    "type": "string",
                                                                    "example": "neutral"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "month"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/dashboard/admin/platform/health": {
            "get": {
                "tags": [
                    "Admin Dashboard"
                ],
                "summary": "Platform health dashboard",
                "description": "Provides real-time metrics on system uptime, average response time, database connections, and API request load for platform monitoring.",
                "operationId": "platformHealth",
                "responses": {
                    "200": {
                        "description": "Platform health statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Platform Health Dashboard"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "system_uptime": {
                                                    "properties": {
                                                        "value": {
                                                            "description": "System uptime in hours",
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 124.5
                                                        },
                                                        "unit": {
                                                            "type": "string",
                                                            "example": "hours"
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 99.98
                                                                },
                                                                "nature": {
                                                                    "type": "string",
                                                                    "example": "positive"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "day"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "response_time": {
                                                    "properties": {
                                                        "value": {
                                                            "description": "Average API response time in ms",
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 120.4
                                                        },
                                                        "unit": {
                                                            "type": "string",
                                                            "example": "ms"
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 0.02
                                                                },
                                                                "nature": {
                                                                    "type": "string",
                                                                    "example": "positive"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "hour"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "database_load": {
                                                    "properties": {
                                                        "value": {
                                                            "description": "Active DB connections",
                                                            "type": "integer",
                                                            "example": 45
                                                        },
                                                        "unit": {
                                                            "type": "string",
                                                            "example": "connections"
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 2
                                                                },
                                                                "nature": {
                                                                    "type": "string",
                                                                    "example": "positive"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "hour"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "api_load": {
                                                    "properties": {
                                                        "value": {
                                                            "description": "Requests per minute",
                                                            "type": "integer",
                                                            "example": 75
                                                        },
                                                        "unit": {
                                                            "type": "string",
                                                            "example": "req/min"
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 5
                                                                },
                                                                "nature": {
                                                                    "type": "string",
                                                                    "example": "positive"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "minute"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/dashboard/admin/payments": {
            "get": {
                "tags": [
                    "Admin Dashboard"
                ],
                "summary": "Admin payments dashboard statistics",
                "description": "Provides monthly payment analytics such as total revenue, success rate, failed payments, and revenue growth compared to the previous month.",
                "operationId": "adminPayments",
                "responses": {
                    "200": {
                        "description": "Admin payment stats",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Admin Payment Stats"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "total": {
                                                    "properties": {
                                                        "value": {
                                                            "description": "Total revenue for the current month",
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 45200.75
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "description": "Growth vs. last month in percentage",
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 12.5
                                                                },
                                                                "nature": {
                                                                    "description": "positive|negative",
                                                                    "type": "string",
                                                                    "example": "positive"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "month"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "success_rate": {
                                                    "properties": {
                                                        "value": {
                                                            "description": "Percentage of successful payment attempts this month",
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 87.3
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 87.3
                                                                },
                                                                "nature": {
                                                                    "type": "string",
                                                                    "example": "positive"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "month"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "failed_payments": {
                                                    "properties": {
                                                        "value": {
                                                            "description": "Number of failed payment attempts this month",
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "integer",
                                                                    "example": 15
                                                                },
                                                                "nature": {
                                                                    "type": "string",
                                                                    "example": "negative"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "month"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "revenue_growth": {
                                                    "properties": {
                                                        "value": {
                                                            "description": "Revenue growth rate compared to previous month (%)",
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 8.4
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 8.4
                                                                },
                                                                "nature": {
                                                                    "type": "string",
                                                                    "example": "positive"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "month"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/dashboard/admin/merchants": {
            "get": {
                "tags": [
                    "Admin Dashboard"
                ],
                "summary": "Admin merchants dashboard statistics",
                "description": "Returns monthly merchant (store) metrics including total, active, pending, and suspended stores with growth percentages compared to the previous month.",
                "operationId": "adminMerchants",
                "responses": {
                    "200": {
                        "description": "Merchant dashboard stats",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Merchant Dashboard Stats"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "total": {
                                                    "properties": {
                                                        "value": {
                                                            "description": "Total number of stores",
                                                            "type": "integer",
                                                            "example": 320
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "description": "Growth vs last month (%)",
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 12.5
                                                                },
                                                                "nature": {
                                                                    "description": "positive|negative",
                                                                    "type": "string",
                                                                    "example": "positive"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "month"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "active": {
                                                    "properties": {
                                                        "value": {
                                                            "description": "Number of active stores",
                                                            "type": "integer",
                                                            "example": 250
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 8.4
                                                                },
                                                                "nature": {
                                                                    "type": "string",
                                                                    "example": "positive"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "month"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "pending": {
                                                    "properties": {
                                                        "value": {
                                                            "description": "Number of stores pending approval",
                                                            "type": "integer",
                                                            "example": 40
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": -5.2
                                                                },
                                                                "nature": {
                                                                    "type": "string",
                                                                    "example": "negative"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "month"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "suspended": {
                                                    "properties": {
                                                        "value": {
                                                            "description": "Number of suspended stores",
                                                            "type": "integer",
                                                            "example": 30
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 3
                                                                },
                                                                "nature": {
                                                                    "type": "string",
                                                                    "example": "positive"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "month"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/orders/{id}/delivered": {
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Mark a product in an order as delivered",
                "description": "Buyer marks a specific product within an order as delivered. \n     *                  If all products for the same seller are delivered, the seller's escrow is released. \n     *                  If all products in the order are delivered, the order status is updated to 'delivered'.",
                "operationId": "26f8c04be643e7393d6602f4f2ba7fb2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id"
                                ],
                                "properties": {
                                    "product_id": {
                                        "description": "ID of the product to mark as delivered",
                                        "type": "integer",
                                        "example": 456
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product marked as delivered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product marked as delivered and escrow updated if applicable."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (e.g. product already delivered or order not paid)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order is not yet paid."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order or product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to validate fields."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "data": {
                                            "properties": {
                                                "product_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The product id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/escrow/balance/stores/{id}": {
            "get": {
                "tags": [
                    "Payouts"
                ],
                "summary": "Get escrow balance for a specific store",
                "description": "Returns the escrow balance of a store owned by the authenticated seller.",
                "operationId": "f9c4488d8a96aab1a8fd5a25df3e2899",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store Balance retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store Balance"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 1200.5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store Not Found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Store is not on your ownership",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store Not Found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/escrow/balance/merchant": {
            "get": {
                "tags": [
                    "Payouts"
                ],
                "summary": "Get total escrow balance for authenticated merchant",
                "description": "Sums all escrow balances across the merchant's stores.",
                "operationId": "0595fb7ca282352058892b0f6d389f5d",
                "responses": {
                    "200": {
                        "description": "Total merchant balance retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Merchant Balance"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 3200.75
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/escrows": {
            "get": {
                "tags": [
                    "Payouts"
                ],
                "summary": "List all escrows for authenticated seller",
                "description": "Returns every escrow record where the current user is the seller.",
                "operationId": "a4b2c23949ba35d49b47d1b9521ae861",
                "responses": {
                    "200": {
                        "description": "List of escrows",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of all escrows"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 45
                                                    },
                                                    "order_id": {
                                                        "type": "integer",
                                                        "example": 102
                                                    },
                                                    "buyer_id": {
                                                        "type": "integer",
                                                        "example": 17
                                                    },
                                                    "seller_id": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "holding"
                                                    },
                                                    "total_amount": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 250
                                                    },
                                                    "seller_amount": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 225
                                                    },
                                                    "platform_fee": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 25
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/expenses": {
            "get": {
                "tags": [
                    "Expenses"
                ],
                "summary": "Get a list of seller expenses",
                "description": "Retrieve expenses for the authenticated seller with optional filters: date range, expense type, and supplier search",
                "operationId": "36e62ecfbcfde37686ea63fe89d0c0c0",
                "parameters": [
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Start date for filtering expenses (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "End date for filtering expenses (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "expense_type_id",
                        "in": "query",
                        "description": "Filter by expense type ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by supplier name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of expenses retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of expenses"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "seller_id": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "expense_type_id": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "supplier": {
                                                                "type": "string",
                                                                "example": "ABC Supplies"
                                                            },
                                                            "amount": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 150.75
                                                            },
                                                            "expense_date": {
                                                                "type": "string",
                                                                "format": "date",
                                                                "example": "2025-09-14"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Office stationery"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 42
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Expenses"
                ],
                "summary": "Record a new expense",
                "description": "Create a new expense for the authenticated seller",
                "operationId": "927e29ac31ae983af0a55ce5d487d554",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "supplier",
                                    "amount",
                                    "expense_date",
                                    "status"
                                ],
                                "properties": {
                                    "supplier": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "ABC Supplies"
                                    },
                                    "expense_type_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "store_id": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 150.75
                                    },
                                    "expense_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-09-14"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "paid",
                                            "overdue"
                                        ],
                                        "example": "pending"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Expense recorded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Expense recorded successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "seller_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "supplier": {
                                                    "type": "string",
                                                    "example": "ABC Supplies"
                                                },
                                                "expense_type_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "store_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 150.75
                                                },
                                                "expense_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-09-14"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-14T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-14T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error: Database error or exception message"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/expenses/{id}": {
            "patch": {
                "tags": [
                    "Expenses"
                ],
                "summary": "Update an existing expense",
                "description": "Update the details of an expense for the authenticated seller",
                "operationId": "e976a7fe9afc75de652b1960bfe6edaa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the expense to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "supplier": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "ABC Supplies"
                                    },
                                    "expense_type_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "store_id": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 150.75
                                    },
                                    "expense_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-09-14"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "paid",
                                            "overdue"
                                        ],
                                        "example": "paid"
                                    },
                                    "closed_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-09-15"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Expense updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Expense updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "seller_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "supplier": {
                                                    "type": "string",
                                                    "example": "ABC Supplies"
                                                },
                                                "expense_type_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "store_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 150.75
                                                },
                                                "expense_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-09-14"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "paid"
                                                },
                                                "closed_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-09-15"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-14T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-15T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Expense not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Expense not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error: Database error or exception message"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/expense/types": {
            "get": {
                "tags": [
                    "Expense Types"
                ],
                "summary": "Get all expense types",
                "description": "Retrieve a list of all expense types",
                "operationId": "8c008f8f20be80fe35c2a2cf394478c3",
                "responses": {
                    "200": {
                        "description": "List of expense types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of expenses type"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Office Supplies"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-14T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-14T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Expense Types"
                ],
                "summary": "Create a new expense type",
                "description": "Add a new expense type",
                "operationId": "66a846a710fe8a0ed6170a1daac0b48b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Office Supplies"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Expense Type created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Type added successful"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Office Supplies"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/expense/types/{id}": {
            "get": {
                "tags": [
                    "Expense Types"
                ],
                "summary": "Get a single expense type",
                "description": "Retrieve details of a specific expense type by ID",
                "operationId": "3b4f2a327433b009a3588ad119262fa3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the expense type",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expense Type details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Expense Type details"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Office Supplies"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Expense Type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Expense Type not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Expense Types"
                ],
                "summary": "Update an expense type",
                "description": "Update the name of a specific expense type",
                "operationId": "db3ba69e36672114667e956b11e016b0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the expense type",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Office Equipment"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Expense Type updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Expense Type updated successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Office Equipment"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Expense Types"
                ],
                "summary": "Delete an expense type",
                "description": "Remove a specific expense type from the system",
                "operationId": "ce3b8ace23a615a85418d330f5359478",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the expense type",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expense Type deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Expense Type deleted successful."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Office Supplies"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Expense Type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Expense Type not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/feedbacks": {
            "get": {
                "tags": [
                    "Feedbacks"
                ],
                "summary": "List all feedbacks",
                "description": "Retrieves a paginated list of customer feedbacks, ordered by most recent.",
                "operationId": "2a36c585876dbe2b107ee1eca25452d4",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feedbacks retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of customer feedbacks"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "user_id": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "feedback": {
                                                                "type": "string",
                                                                "example": "Great service!"
                                                            },
                                                            "rating": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "example": "feedback_images/example.jpg"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "example": "2025-09-11T10:00:00.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "example": "2025-09-11T10:00:00.000000Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 250
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Feedbacks"
                ],
                "summary": "Submit new feedback",
                "description": "Stores user feedback and sends an email notification to the admin.",
                "operationId": "1a1a79efc6cbe218c6741ed01413fdda",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "feedback": {
                                        "type": "string",
                                        "example": "Great service!"
                                    },
                                    "rating": {
                                        "type": "integer",
                                        "format": "int32",
                                        "example": 5
                                    },
                                    "image": {
                                        "description": "Optional image upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Feedback submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Feedback submitted successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "feedback": {
                                                    "type": "string",
                                                    "example": "Great service!"
                                                },
                                                "rating": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "feedback_images/example.jpg"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-09-11T10:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-09-11T10:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/auth/login/google": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Redirect to Google OAuth",
                "description": "Starts the Google OAuth flow by redirecting the user to Google's login/consent screen.",
                "operationId": "googleRedirect",
                "responses": {
                    "302": {
                        "description": "Redirect response to Google login page",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "redirect_url": {
                                            "type": "string",
                                            "example": "https://accounts.google.com/o/oauth2/auth?..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contact/group/assign": {
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Assign a contact to a group",
                "description": "Assigns a contact to a group for the authenticated user.",
                "operationId": "assignContactToGroup",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "group_id",
                                    "contact_id"
                                ],
                                "properties": {
                                    "group_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "contact_id": {
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Contact assigned to group successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact assigned to group."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "409": {
                        "description": "Conflict: Contact already assigned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact already assigned to this group"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/contact/group/remove": {
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Remove a contact from a group",
                "description": "Removes the relationship between a contact and a group for the authenticated user.",
                "operationId": "removeContactFromGroup",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "group_id",
                                    "contact_id"
                                ],
                                "properties": {
                                    "group_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "contact_id": {
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Contact removed from group successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contact removed from group."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Relation not found (contact not in group)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "This contact is not assigned to the group."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to validate fields"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/groups": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Get all groups",
                "description": "Retrieve a list of all contact groups.",
                "operationId": "getGroups",
                "responses": {
                    "200": {
                        "description": "List of groups retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of all groups"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "VIP Customers"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-13T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-13T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Create a new group",
                "description": "Creates a new contact group for the authenticated user.",
                "operationId": "createGroup",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "VIP Customers"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "High priority clients"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Group created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Group added successful"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "VIP Customers"
                                                },
                                                "slug": {
                                                    "type": "string",
                                                    "example": "vip-customers"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "High priority clients"
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-13T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-13T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/groups/{id}": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Get group details",
                "description": "Retrieve a contact group by its ID.",
                "operationId": "getGroupById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the group to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Group details"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "VIP Customers"
                                                },
                                                "slug": {
                                                    "type": "string",
                                                    "example": "vip-customers"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "High priority clients"
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-13T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-13T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Group is not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Update a group",
                "description": "Updates a contact group by ID.",
                "operationId": "updateGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the group to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "VIP Customers"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "High priority clients"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Group updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Group updated successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "VIP Customers"
                                                },
                                                "slug": {
                                                    "type": "string",
                                                    "example": "vip-customers"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "High priority clients"
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-13T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-13T12:30:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Group not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Delete a group",
                "description": "Deletes a contact group by ID.",
                "operationId": "deleteGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the group to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Group deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Deleted successful"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 204
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Group is not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/products/inventory": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "List all products with stock balances",
                "description": "Returns all products along with their latest stock balance.",
                "operationId": "96f359fa31779fff113721975501e7e4",
                "responses": {
                    "200": {
                        "description": "List of products with balances",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product inventory list"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 101
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "4K TV"
                                                    },
                                                    "store": {
                                                        "type": "string",
                                                        "example": "City Electronics"
                                                    },
                                                    "balance": {
                                                        "type": "integer",
                                                        "example": 25
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/products/{id}/inventory": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Show product stock ledger",
                "description": "Returns the full inventory ledger for a specific product, including store and product details.",
                "operationId": "9a3385b406aff996c630da353792b965",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 101
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product ledger retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product inventory ledger"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "store_id": {
                                                        "type": "integer",
                                                        "example": 10
                                                    },
                                                    "store_name": {
                                                        "type": "string",
                                                        "example": "City Electronics"
                                                    },
                                                    "product_id": {
                                                        "type": "integer",
                                                        "example": 101
                                                    },
                                                    "product_name": {
                                                        "type": "string",
                                                        "example": "4K TV"
                                                    },
                                                    "change": {
                                                        "type": "integer",
                                                        "example": 10
                                                    },
                                                    "balance": {
                                                        "type": "integer",
                                                        "example": 25
                                                    },
                                                    "reason": {
                                                        "type": "string",
                                                        "example": "restock"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2025-09-19T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Adjust stock quantity for a product",
                "description": "Allows the authenticated seller to adjust the stock quantity for their product.",
                "operationId": "9d459960f92fd6ce3dc9e7ceab0cc449",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 101
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "stock_qty"
                                ],
                                "properties": {
                                    "stock_qty": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "reason": {
                                        "type": "string",
                                        "example": "restock"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Stock updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Stock updated successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "balance": {
                                                    "type": "integer",
                                                    "example": 35
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to adjust this product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not own this product"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": {
                                                "stock_qty": [
                                                    "The stock qty field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/products/{id}/inventory/balance": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Get current stock balance of a product",
                "description": "Returns only the latest balance for a specific product.",
                "operationId": "2a1a14275206e79325b259340394b7c5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 101
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product stock balance retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product stock balance"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "balance": {
                                                    "type": "integer",
                                                    "example": 35
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/products/{id}/add": {
            "post": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Add stock to a product",
                "description": "Increase the stock quantity of a product. Only the store owner (seller) can perform this action.",
                "operationId": "8398027dbba65c487b712565487f8718",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to restock",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 101
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "quantity"
                                ],
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": 101
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 20
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "New shipment arrived"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Stock successfully added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product Stock Added"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/products/{id}/deduct": {
            "delete": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Deduct stock from a product",
                "description": "Decrease the stock quantity of a product (e.g., for expired or damaged items). Only the store owner (seller) can perform this action.",
                "operationId": "b6dbe8b6f3a519905b507468f1f773c7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to deduct stock from",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 101
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "quantity"
                                ],
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": 101
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Damaged items removed"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Stock successfully deducted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product Stock Deducted"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid deduction (e.g., insufficient stock)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot deduct more than available stock"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/countries": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Get list of countries",
                "description": "Retrieve a complete list of countries available in the system.",
                "operationId": "getCountries",
                "responses": {
                    "200": {
                        "description": "List of countries retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of countries"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Tanzania"
                                                    },
                                                    "abbr": {
                                                        "type": "string",
                                                        "example": "TZ"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2025-09-10T04:59:16.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2025-09-11T12:30:00.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Location"
                ],
                "summary": "Add a new country",
                "description": "Creates a new country record with a name and unique abbreviation.",
                "operationId": "eafb75bccd65ba4ce4f5e7035e3744d5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Tanzania"
                                    },
                                    "abbr": {
                                        "type": "string",
                                        "example": "TZ"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Country successfully added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "New country added."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Tanzania"
                                                },
                                                "abbr": {
                                                    "type": "string",
                                                    "example": "TZ"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-09-11T10:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-09-11T10:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                }
            }
        },
        "/countries/{id}/regions": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Get regions by country ID",
                "description": "Returns a list of regions for the given country ID.",
                "operationId": "7eef8554da541e624943f0fe5226f2b0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the country",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of regions for a specific country",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Regions by Country ID"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Tanzania"
                                                },
                                                "abbr": {
                                                    "type": "string",
                                                    "example": "TZ"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-09-10T04:59:16.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-09-10T04:59:16.000000Z"
                                                },
                                                "regions": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Arusha"
                                                            },
                                                            "postal_code": {
                                                                "type": "string",
                                                                "example": "23100"
                                                            },
                                                            "country_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "example": "2025-09-10T04:59:16.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "example": "2025-09-10T04:59:16.000000Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Country not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Country not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/countries/{code}/regions": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Get regions by country code",
                "description": "Returns a list of regions for the given country code.",
                "operationId": "0ecb7e9afe8858443fde6429b442a7a1",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "ISO code of the country (e.g., TZ)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of regions for a specific country",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Regions by Country Code"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Tanzania"
                                                },
                                                "abbr": {
                                                    "type": "string",
                                                    "example": "TZ"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-09-10T04:59:16.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-09-10T04:59:16.000000Z"
                                                },
                                                "regions": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Tanzania"
                                                            },
                                                            "abbr": {
                                                                "type": "string",
                                                                "example": "TZ"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "example": "2025-09-10T04:59:16.000000Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "example": "2025-09-10T04:59:16.000000Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Country not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Country not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/regions": {
            "post": {
                "tags": [
                    "Location"
                ],
                "summary": "Add a new region",
                "description": "Creates a new region associated with a country.",
                "operationId": "c00be5d2844d73eb8e62d625fed9c8a2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Dar es Salaam"
                                    },
                                    "postal_code": {
                                        "type": "string",
                                        "example": "DSM01",
                                        "nullable": true
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Region successfully added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "New regions added."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Dar es Salaam"
                                                },
                                                "postal_code": {
                                                    "type": "string",
                                                    "example": "DSM01"
                                                },
                                                "country_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-09-11T12:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-09-11T12:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                }
            }
        },
        "/countries/{id}": {
            "put": {
                "tags": [
                    "Location"
                ],
                "summary": "Update a country",
                "description": "Updates an existing country by its ID. Only provided fields will be updated.",
                "operationId": "49293360fe664be9ba1a0e35ded0abc5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the country to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "United Republic of Tanzania"
                                    },
                                    "abbr": {
                                        "type": "string",
                                        "example": "TZ"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Country updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Country updated successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "United Republic of Tanzania"
                                                },
                                                "abbr": {
                                                    "type": "string",
                                                    "example": "TZ"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-09-10T04:59:16.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-09-11T12:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Country not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Country not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Location"
                ],
                "summary": "Delete a country",
                "description": "Deletes a country by its ID.",
                "operationId": "bffec485f1ed682f675e58e1d593b94d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the country to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Country deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Country deleted successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Country not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Country not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                }
            }
        },
        "/regions/{id}": {
            "put": {
                "tags": [
                    "Location"
                ],
                "summary": "Update a region",
                "description": "Updates an existing region by its ID. Only provided fields will be updated.",
                "operationId": "83c804ea09f007b727e59441480af9ae",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the region to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Dar es Salaam"
                                    },
                                    "postal_code": {
                                        "type": "string",
                                        "example": "DSM001"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Region updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Region updated successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Dar es Salaam"
                                                },
                                                "postal_code": {
                                                    "type": "string",
                                                    "example": "DSM001"
                                                },
                                                "country_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-09-10T04:59:16.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-09-11T12:30:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Region not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Region not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Location"
                ],
                "summary": "Delete a region",
                "description": "Deletes a region by its ID.",
                "operationId": "2b8e9b6a5ac31748e0d91bfd224b4e43",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the region to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Region deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Region deleted successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Region not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Region not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Request OTP login",
                "description": "Send an OTP code to the provided phone number for login.",
                "operationId": "20972cf2285d0051eab77f132ecff471",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone"
                                ],
                                "properties": {
                                    "phone": {
                                        "type": "string",
                                        "example": "+255712345678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful. OTP sent."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Mobile login not enabled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Mobile login not enabled for this user."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },
        "/auth/verify/otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify OTP for login",
                "description": "Validates the OTP and issues an access token for the user.",
                "operationId": "90ad45ac3dcd72a05624c6ccff805c99",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone",
                                    "otp"
                                ],
                                "properties": {
                                    "phone": {
                                        "type": "string",
                                        "example": "+255712345678"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP verified. Login successful."
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|eyJhbGciOiJI..."
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "phone": {
                                                            "type": "string",
                                                            "example": "+255712345678"
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "example": "seller"
                                                        },
                                                        "phone_verified_at": {
                                                            "type": "string",
                                                            "example": "2025-09-11T14:00:00Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid or expired OTP."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },
        "/auth/login/email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login with email",
                "description": "Authenticates a user using email and password, returning an access token on success.",
                "operationId": "f6c0a736c345a65e2b0158108717c919",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User login successful."
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|eyJhbGciOiJI..."
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "user@example.com"
                                                        },
                                                        "phone": {
                                                            "type": "string",
                                                            "example": "+255712345678"
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "example": "seller"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },
        "/auth/provider/add": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Add or enable auth provider",
                "description": "Allows a user to enable an authentication provider such as email, Google, or mobile for login.",
                "operationId": "da79124b499734c690b5b1776c098add",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "provider": {
                                        "description": "The authentication provider to enable",
                                        "type": "string",
                                        "enum": [
                                            "email",
                                            "google",
                                            "mobile"
                                        ],
                                        "example": "mobile"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Authentication provider set successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Auth Provider set"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "provider": {
                                                    "type": "string",
                                                    "example": "mobile"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation or precondition failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Please set a phone number before enabling mobile login."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/auth/provider/remove": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Remove auth provider",
                "description": "Allows a user to remove an authentication provider such as email, Google, or mobile. Ensures at least one provider remains active.",
                "operationId": "9a5ca76176e3f8b28fbe519e1ff2f26a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "provider": {
                                        "description": "The authentication provider to remove",
                                        "type": "string",
                                        "enum": [
                                            "email",
                                            "google",
                                            "mobile"
                                        ],
                                        "example": "mobile"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Authentication provider removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Auth provider removed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation or business rule failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You must have at least one authentication method enabled."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/auth/provider/change": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Change auth provider status",
                "description": "Activate or deactivate an authentication provider such as email, Google, or mobile. Ensures at least one provider remains active.",
                "operationId": "3002a2efc5f84b27285762928a67ff2c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "provider": {
                                        "description": "The authentication provider to update",
                                        "type": "string",
                                        "enum": [
                                            "email",
                                            "google",
                                            "mobile"
                                        ],
                                        "example": "mobile"
                                    },
                                    "is_active": {
                                        "description": "Set to true to activate, false to deactivate",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Authentication provider updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Auth provider updated"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "mobile"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Business rule violated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You must keep at least one authentication method active."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/reports/online/performance/stats": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get monthly online store performance statistics",
                "description": "Returns key metrics for the authenticated seller’s store during the current month, \n     *     including visits, cart additions, conversion rate, and cart-abandonment percentage, plus month-over-month change for visits.",
                "operationId": "onlinePerformanceStats",
                "responses": {
                    "200": {
                        "description": "Store performance metrics for the current month",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store performance metrics for the current month"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "visits": {
                                                    "properties": {
                                                        "value": {
                                                            "type": "integer",
                                                            "example": 1500
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 12.5
                                                                },
                                                                "nature": {
                                                                    "description": "positive|negative",
                                                                    "type": "string",
                                                                    "example": "positive"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "month"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "cart_additions": {
                                                    "properties": {
                                                        "value": {
                                                            "type": "integer",
                                                            "example": 320
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 0
                                                                },
                                                                "nature": {
                                                                    "type": "string",
                                                                    "example": "positive"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "month"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "conversion_rate": {
                                                    "properties": {
                                                        "value": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 4.73
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 0
                                                                },
                                                                "nature": {
                                                                    "type": "string",
                                                                    "example": "neutral"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "month"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "cart_abandonment": {
                                                    "properties": {
                                                        "value": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 37.5
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 0
                                                                },
                                                                "nature": {
                                                                    "type": "string",
                                                                    "example": "neutral"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "month"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/reports/online/performance/store/activity": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get weekly store activity metrics for the current month",
                "description": "Returns per-week counts of visits, impressions, and engagements for the authenticated seller’s store during the current month.",
                "operationId": "onlinePerformanceStoreActivity",
                "responses": {
                    "200": {
                        "description": "Weekly store activity data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store activity for the current month by week"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "week_1": {
                                                    "properties": {
                                                        "visits": {
                                                            "type": "integer",
                                                            "example": 120
                                                        },
                                                        "impressions": {
                                                            "type": "integer",
                                                            "example": 340
                                                        },
                                                        "engagements": {
                                                            "type": "integer",
                                                            "example": 75
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "week_2": {
                                                    "properties": {
                                                        "visits": {
                                                            "type": "integer",
                                                            "example": 95
                                                        },
                                                        "impressions": {
                                                            "type": "integer",
                                                            "example": 280
                                                        },
                                                        "engagements": {
                                                            "type": "integer",
                                                            "example": 60
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "week_3": {
                                                    "properties": {
                                                        "visits": {
                                                            "type": "integer",
                                                            "example": 110
                                                        },
                                                        "impressions": {
                                                            "type": "integer",
                                                            "example": 300
                                                        },
                                                        "engagements": {
                                                            "type": "integer",
                                                            "example": 68
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "week_4": {
                                                    "properties": {
                                                        "visits": {
                                                            "type": "integer",
                                                            "example": 150
                                                        },
                                                        "impressions": {
                                                            "type": "integer",
                                                            "example": 400
                                                        },
                                                        "engagements": {
                                                            "type": "integer",
                                                            "example": 90
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/reports/online/performance/conversion/rate": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get monthly conversion rate trends",
                "description": "Returns month-by-month store visits, completed orders, and conversion rate percentages for the authenticated seller from the start of the current year through the current month.",
                "operationId": "reportsConversionRate",
                "responses": {
                    "200": {
                        "description": "Monthly conversion rate data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Monthly conversion rate trends"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "month": {
                                                        "description": "Year-month in YYYY-MM format",
                                                        "type": "string",
                                                        "example": "2025-01"
                                                    },
                                                    "month_abbr": {
                                                        "description": "Three-letter month abbreviation",
                                                        "type": "string",
                                                        "example": "Jan"
                                                    },
                                                    "visits": {
                                                        "description": "Number of store visits in the month",
                                                        "type": "integer",
                                                        "example": 450
                                                    },
                                                    "orders": {
                                                        "description": "Number of completed orders in the month",
                                                        "type": "integer",
                                                        "example": 120
                                                    },
                                                    "conversion_rate": {
                                                        "description": "(orders/visits)*100 rounded to 2 decimals",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 26.67
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/reports/online/performance/top/performing": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get top performing products",
                "description": "Returns the top 10 products for the authenticated seller, ranked by combined clicks and completed purchases.",
                "operationId": "getTopPerformingProducts",
                "responses": {
                    "200": {
                        "description": "Top performing products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Top performing products (clicks & purchases)"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Product ID",
                                                        "type": "integer",
                                                        "example": 42
                                                    },
                                                    "name": {
                                                        "description": "Product name",
                                                        "type": "string",
                                                        "example": "Wireless Headphones"
                                                    },
                                                    "clicks": {
                                                        "description": "Total number of clicks",
                                                        "type": "integer",
                                                        "example": 350
                                                    },
                                                    "purchases": {
                                                        "description": "Total completed purchases",
                                                        "type": "integer",
                                                        "example": 75
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/reports/online/performance/products": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Product performance statistics",
                "description": "Returns per-product performance for the authenticated seller, including clicks, purchases, conversion rate, and total revenue.",
                "operationId": "getProductPerformance",
                "responses": {
                    "200": {
                        "description": "Product performance stats retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product performance stats"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Product ID",
                                                        "type": "integer",
                                                        "example": 101
                                                    },
                                                    "name": {
                                                        "description": "Product name",
                                                        "type": "string",
                                                        "example": "Wireless Earbuds"
                                                    },
                                                    "page_clicks": {
                                                        "description": "Total page clicks for the product",
                                                        "type": "integer",
                                                        "example": 450
                                                    },
                                                    "purchases": {
                                                        "description": "Total completed purchases",
                                                        "type": "integer",
                                                        "example": 120
                                                    },
                                                    "conversion_rate": {
                                                        "description": "Purchases ÷ Clicks × 100",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 26.7
                                                    },
                                                    "revenue": {
                                                        "description": "Total revenue generated from completed orders",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 5890.5
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get list of buyer's orders",
                "description": "Returns all orders for the authenticated buyer along with items, product, and store details.",
                "operationId": "getOrders",
                "responses": {
                    "200": {
                        "description": "List of orders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of orders"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 101
                                                    },
                                                    "buyer_id": {
                                                        "type": "integer",
                                                        "example": 10
                                                    },
                                                    "total_amount": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 50000
                                                    },
                                                    "shipping_cost": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 5000
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "pending"
                                                    },
                                                    "payment_option_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "payment_method_id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "items": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "product_id": {
                                                                    "type": "integer",
                                                                    "example": 10
                                                                },
                                                                "quantity": {
                                                                    "type": "integer",
                                                                    "example": 2
                                                                },
                                                                "price": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 15000
                                                                },
                                                                "product": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string",
                                                                            "example": "Smartphone Case"
                                                                        },
                                                                        "store": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string",
                                                                                    "example": "Tech Store"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get details of a specific order",
                "description": "Returns details of a specific order for the authenticated buyer including items, products, and store details.",
                "operationId": "getOrderById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 101
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order details"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 101
                                                },
                                                "buyer_id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 50000
                                                },
                                                "shipping_cost": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 5000
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                },
                                                "payment_option_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "payment_method_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "product_id": {
                                                                "type": "integer",
                                                                "example": 10
                                                            },
                                                            "quantity": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 15000
                                                            },
                                                            "product": {
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Smartphone Case"
                                                                    },
                                                                    "store": {
                                                                        "properties": {
                                                                            "name": {
                                                                                "type": "string",
                                                                                "example": "Tech Store"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/orders/cancel/{id}": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Cancel an order",
                "description": "Cancel a specific order for the authenticated buyer if it is not yet shipped, delivered, or already cancelled.",
                "operationId": "cancelOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order to cancel",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 101
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order cancelled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order cancelled successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 101
                                                },
                                                "buyer_id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 50000
                                                },
                                                "shipping_cost": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 5000
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "cancelled"
                                                },
                                                "payment_option_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "payment_method_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-16T09:30:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-16T10:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Order cannot be cancelled at this stage",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order cannot be cancelled at this stage"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/orders/status/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get order status history",
                "description": "Retrieve the status history of a specific order for the authenticated buyer.",
                "operationId": "getOrderStatusHistory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 101
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order status history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of order status history"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "order_id": {
                                                        "type": "integer",
                                                        "example": 101
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "pending"
                                                    },
                                                    "note": {
                                                        "type": "string",
                                                        "example": "Order created"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-14T12:34:56Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-09-14T12:34:56Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/auth/password/forgot": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Request password reset OTP",
                "description": "Generates a one-time password (OTP) and sends it to the user's registered email for password reset.",
                "operationId": "3f82eda2271adeedde9497bfc6518b27",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent to your email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to validate fields."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Email not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User with this email does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/password/reset": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset password with OTP",
                "description": "Allows a user to reset their password by providing a valid OTP sent to their email.",
                "operationId": "1a4058653aab1fc89ebfb14e66cc917a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "NewPassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "NewPassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password has been reset successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid OTP"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },
        "/auth/password/update": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Update password for authenticated user",
                "description": "Allows an authenticated user to change their password by providing the current password and a new password.",
                "operationId": "5d47624be2d3cd8254f4925be455c326",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "CurrentPass123"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "NewPass123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "NewPass123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Current password is incorrect",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Current password is incorrect"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/payments": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get list of payments for authenticated user",
                "description": "Retrieve a paginated list of payments with optional filters for payment method, status, and search by order reference or payment reference.",
                "operationId": "listPayments",
                "parameters": [
                    {
                        "name": "payment_method_id",
                        "in": "query",
                        "description": "Filter payments by payment method ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter payments by status (e.g., pending, successful, failed)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "pending"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search payments by order reference or payment reference",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "ORD-20250916-ABC123"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of payments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of payments"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 101
                                                            },
                                                            "reference": {
                                                                "type": "string",
                                                                "example": "PAY-20250916-XYZ123"
                                                            },
                                                            "amount": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 50000
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "pending"
                                                            },
                                                            "order": {
                                                                "type": "object"
                                                            },
                                                            "paymentMethod": {
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 250
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/checkout": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Checkout the cart and create an order",
                "description": "Transfers the buyer's cart items into an order with shipping address and payment details.",
                "operationId": "checkout",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "fullname",
                                    "phone",
                                    "address",
                                    "region_id",
                                    "payment_method_id",
                                    "payment_option_id"
                                ],
                                "properties": {
                                    "fullname": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+255712345678"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main Street"
                                    },
                                    "region_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "payment_method_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "payment_option_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order placed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order placed successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "order_id": {
                                                    "type": "integer",
                                                    "example": 101
                                                },
                                                "total": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 50000
                                                },
                                                "subtotal": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 45000
                                                },
                                                "shipping": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 5000
                                                },
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "product_id": {
                                                                "type": "integer",
                                                                "example": 10
                                                            },
                                                            "quantity": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 15000
                                                            },
                                                            "product": {
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Smartphone Case"
                                                                    },
                                                                    "store": {
                                                                        "properties": {
                                                                            "name": {
                                                                                "type": "string",
                                                                                "example": "Tech Store"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cart empty or query error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Please add items to cart first."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/payment/process": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Initiate payment for an order",
                "description": "Initiates a payment process for a specific order using a selected payment option.",
                "operationId": "initiatePayment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "order_id": {
                                        "description": "ID of the order to pay for",
                                        "type": "integer",
                                        "example": 101
                                    },
                                    "payment_option_id": {
                                        "description": "ID of the selected payment option",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment process initiated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment initiated successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid payment option or cannot pay order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid payment option selected."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/payment/methods": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get list of available payment methods",
                "description": "Retrieve all enabled payment methods such as cards, banks, or MNOs.",
                "operationId": "6d984ed78b057d912b1e4375ad4d3a5e",
                "responses": {
                    "200": {
                        "description": "List of available payment methods",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of available payment methods"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "card"
                                                    },
                                                    "display": {
                                                        "type": "string",
                                                        "example": "Visa"
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "example": "https://example.com/images/visa.png"
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "example": "visa"
                                                    },
                                                    "enabled": {
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Create a new payment method",
                "description": "Add a new payment method such as card, bank, or mobile network operator (MNO).",
                "operationId": "83fb64ef3665ff1aefe2376f7510ecfc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "display"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "card",
                                            "bank",
                                            "mno"
                                        ],
                                        "example": "card"
                                    },
                                    "display": {
                                        "type": "string",
                                        "example": "Visa"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "https://example.com/images/visa.png",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment method added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment method added successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "card"
                                                },
                                                "display": {
                                                    "type": "string",
                                                    "example": "Visa"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "https://example.com/images/visa.png"
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "visa"
                                                },
                                                "enabled": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to validate fields"
                                        },
                                        "data": {
                                            "properties": {
                                                "display": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The display field has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/payment/methods/{id}": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get payment method details",
                "description": "Retrieve the details of a specific payment method by its ID.",
                "operationId": "e5961486de80d7656e88572d2e79ca56",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the payment method",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment method details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment method details"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "card"
                                                },
                                                "display": {
                                                    "type": "string",
                                                    "example": "Visa"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "https://example.com/images/visa.png"
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "visa"
                                                },
                                                "enabled": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment method not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment method not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Payments"
                ],
                "summary": "Delete a payment method",
                "description": "Remove a payment method by its ID.",
                "operationId": "3ea6f59b8284b9b8ebe462bbfcd6ca90",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the payment method to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment method deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment method deleted successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment method not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment method not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Payments"
                ],
                "summary": "Update a payment method",
                "description": "Update the details of an existing payment method by its ID.",
                "operationId": "7f3a1a76ccd7edee4cb5b54ee8f9bdf9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the payment method",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "card",
                                            "bank",
                                            "mno"
                                        ],
                                        "example": "card"
                                    },
                                    "display": {
                                        "type": "string",
                                        "example": "Visa"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "https://example.com/images/visa.png"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment method updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment method updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "card"
                                                },
                                                "display": {
                                                    "type": "string",
                                                    "example": "Visa"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "https://example.com/images/visa.png"
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "visa"
                                                },
                                                "enabled": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment method not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment method not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to validate fields"
                                        },
                                        "data": {
                                            "properties": {
                                                "display": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The display field has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/payment/methods/all": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get all payment methods",
                "description": "Retrieve a list of all payment methods, including disabled ones.",
                "operationId": "34a9e628346e814028b27bef2a7c070a",
                "responses": {
                    "200": {
                        "description": "List of all payment methods",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of all payment methods"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "card"
                                                    },
                                                    "display": {
                                                        "type": "string",
                                                        "example": "Visa"
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "example": "visa"
                                                    },
                                                    "enabled": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "example": "https://example.com/images/visa.png"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2025-09-14T15:30:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2025-09-14T15:30:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/payment/methods/{id}/status": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Toggle payment method status",
                "description": "Enable or disable a payment method by ID.",
                "operationId": "7fda949262a2686114961e71a6c05ffc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the payment method",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment method status updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Visa enabled successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "card"
                                                },
                                                "display": {
                                                    "type": "string",
                                                    "example": "Visa"
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "visa"
                                                },
                                                "enabled": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "https://example.com/images/visa.png"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-09-14T15:30:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-09-14T15:35:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment method not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/payment/options": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "List all payment options",
                "description": "Retrieve a list of available payment options.",
                "operationId": "361c9b93d50790eba2a5b181dd02bf04",
                "responses": {
                    "200": {
                        "description": "List of payment options retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of payment options"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Mpesa"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Mobile money payment option"
                                                    },
                                                    "key": {
                                                        "type": "string",
                                                        "example": "mpesa"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Create a new payment option",
                "description": "Add a new payment option to the system.",
                "operationId": "f307d7a470272f40ca6e0a0026acfa76",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Mpesa"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Mobile money payment option"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment option created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment option added successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Mpesa"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Mobile money payment option"
                                                },
                                                "key": {
                                                    "type": "string",
                                                    "example": "mpesa"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to validate fields"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/payment/options/{id}": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get payment option details",
                "description": "Retrieve details of a specific payment option by ID.",
                "operationId": "a71330388de2ded08f50fd7c4f14d4d3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the payment option",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment option details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment option details"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Mpesa"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Mobile money payment option"
                                                },
                                                "key": {
                                                    "type": "string",
                                                    "example": "mpesa"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment option not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment option not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Payments"
                ],
                "summary": "Delete a payment option",
                "description": "Remove a payment option by its ID.",
                "operationId": "ec95411ae61ac482429a073c25574d90",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the payment option",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment option deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment option deleted successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment option not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment option not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Payments"
                ],
                "summary": "Update a payment option",
                "description": "Update details of an existing payment option by ID.",
                "operationId": "09b756cbfdd0fd8b4079a52aabf4017e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the payment option",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Tigo Pesa"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated mobile money payment option"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment option updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment option updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Tigo Pesa"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Updated mobile money payment option"
                                                },
                                                "key": {
                                                    "type": "string",
                                                    "example": "tigo-pesa"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment option not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment option not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to validate fields"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/payouts": {
            "get": {
                "tags": [
                    "Payouts"
                ],
                "summary": "List seller's payouts",
                "description": "Returns all payouts that belong to the authenticated seller.",
                "operationId": "84169e992838b79318aa0116b52bf550",
                "responses": {
                    "200": {
                        "description": "List of payouts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of payouts"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 12
                                                    },
                                                    "amount": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 500
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "pending"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Payouts"
                ],
                "summary": "Request a payout",
                "description": "Creates a payout request for the authenticated seller and sends the disbursement to Airtel. \n     *                  On success, the payout is recorded and the seller’s escrow balance is reduced.",
                "operationId": "createPayout",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount"
                                ],
                                "properties": {
                                    "amount": {
                                        "description": "Amount to withdraw (TZS). Must be ≥ 1.",
                                        "type": "number",
                                        "format": "float",
                                        "example": 25000
                                    },
                                    "note": {
                                        "description": "Optional note for the payout.",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Weekly withdrawal"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payout processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payout processed successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "transaction_id": {
                                                    "description": "Airtel reference/transaction ID.",
                                                    "type": "string",
                                                    "example": "18****354"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "400": {
                        "description": "Insufficient balance or seller account missing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Insufficient balance"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Payout failed on Airtel side",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payout failed: Airtel error message"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 502
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error: database or processing failure"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/payouts/{id}": {
            "get": {
                "tags": [
                    "Payouts"
                ],
                "summary": "Get payout details",
                "description": "Returns details of a specific payout if it belongs to the authenticated seller.",
                "operationId": "e6f40f66141d8b0327f626f63ee83c13",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payout ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payout details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payout details"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "example": 500
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                },
                                                "payment_method_id": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payout not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payout not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/payouts/all": {
            "get": {
                "tags": [
                    "Payouts"
                ],
                "summary": "List all payouts (Admin only)",
                "description": "Accessible only by super admins to list every payout.",
                "operationId": "f690efca795c62523e74d308370c373e",
                "responses": {
                    "200": {
                        "description": "List of all payouts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of all payouts"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 20
                                                    },
                                                    "seller_id": {
                                                        "type": "integer",
                                                        "example": 4
                                                    },
                                                    "amount": {
                                                        "type": "number",
                                                        "example": 750
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "completed"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/payout/settlement-type": {
            "patch": {
                "tags": [
                    "Payouts"
                ],
                "summary": "Toggle seller settlement type (manual/auto)",
                "operationId": "1d457d628d9f11e3eb7d100ca917f100",
                "responses": {
                    "200": {
                        "description": "Settlement type changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Settlement type changed.."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Seller record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Seller record not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "List products for authenticated seller",
                "description": "Retrieve a paginated list of products belonging to the authenticated seller. Supports filtering by search, category, store, price range, and online status.",
                "operationId": "listProducts",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by product name, SKU, or barcode",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter by category ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Filter by store ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "price_min",
                        "in": "query",
                        "description": "Filter by minimum price",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "price_max",
                        "in": "query",
                        "description": "Filter by maximum price",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "is_online",
                        "in": "query",
                        "description": "Filter by online status (1 = online, 0 = offline)",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of products per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Products retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Product"
                                                    }
                                                },
                                                "first_page_url": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "last_page_url": {
                                                    "type": "string"
                                                },
                                                "next_page_url": {
                                                    "type": "string"
                                                },
                                                "prev_page_url": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "description": "Create a new product in a store owned by the authenticated seller.",
                "operationId": "createProduct",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "store_id",
                                    "name",
                                    "description",
                                    "price"
                                ],
                                "properties": {
                                    "store_id": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Laptop X"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "High-end laptop"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 299.99
                                    },
                                    "sku": {
                                        "type": "string",
                                        "example": "LAP12345",
                                        "nullable": true
                                    },
                                    "barcode": {
                                        "type": "string",
                                        "example": "1234567890123",
                                        "nullable": true
                                    },
                                    "is_online": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "stock_qty": {
                                        "type": "integer",
                                        "example": 10,
                                        "nullable": true
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "images": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "path": {
                                                    "type": "string",
                                                    "example": "/images/laptop.png"
                                                },
                                                "is_cover": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "position": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get a single product",
                "description": "Retrieve details of a product by its ID. Only the authenticated seller who owns the store can view it.",
                "operationId": "showProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized: Seller does not own this product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized: You cannot view this product."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update a product",
                "description": "Update a product by ID. Only the seller who owns the store can update the product. Categories and images can also be updated.",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Laptop X Pro"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated high-end laptop"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 349.99
                                    },
                                    "sku": {
                                        "type": "string",
                                        "example": "LAP12345"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "barcode": {
                                        "type": "string",
                                        "example": "1234567890123"
                                    },
                                    "is_online": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "stock_qty": {
                                        "type": "integer",
                                        "example": 15
                                    },
                                    "images": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "path": {
                                                    "type": "string",
                                                    "example": "/images/laptop.png"
                                                },
                                                "is_cover": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "position": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "description": "Delete a product by ID. Only the seller who owns the store can delete the product. Soft delete is applied.",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product deleted successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/products/all": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "List all products",
                "description": "Retrieve all products. Optionally filter by name using the `name` query parameter.",
                "operationId": "listAllProducts",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter products by name (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Laptop"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of products"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/products/{id}/online": {
            "patch": {
                "tags": [
                    "Products"
                ],
                "summary": "Toggle product online status",
                "description": "Toggle the `is_online` status of a product. Only the authenticated seller who owns the product can perform this action.",
                "operationId": "toggleProductStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to toggle status",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product status changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product status changed successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/products/excel": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Bulk upload products",
                "description": "Upload multiple products using a CSV or XLSX file. The file must contain valid product data according to the import rules.",
                "operationId": "bulkUploadProducts",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "description": "CSV or XLSX file containing product data",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Products uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Products uploaded successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/stores/{id}/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "List products of a store",
                "description": "Retrieve all products for a given store. Optional filters for name and category are available.",
                "operationId": "listStoreProducts",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the store",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter products by name (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Laptop"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter products by category ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Products for store"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/products/{id}/detailed": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get detailed product information",
                "description": "Returns a product along with its related store, reviews, categories, and images.",
                "operationId": "b03eaa39123812fb8ec3077efc267bf4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 101
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detailed product information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Detailed product information"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 101
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "4K TV"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "High-definition television."
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 499.99
                                                },
                                                "store": {
                                                    "type": "object"
                                                },
                                                "reviews": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "categories": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "images": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/{id}/online-status": {
            "patch": {
                "tags": [
                    "Products"
                ],
                "summary": "Toggle product online status",
                "description": "Allows the authenticated **seller** who owns the product to toggle its online/offline status.",
                "operationId": "aaccc542f2bc8b515b881115f8804dc9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to toggle",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 101
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product online status changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product online status changed."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User does not own the product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You do not own this product"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Registers a new user as seller (if unauthenticated) or admin (if called by an authenticated user).",
                "operationId": "980fe749c123101f373dc4acff680efa",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "phone"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+255712345678"
                                    },
                                    "password": {
                                        "description": "Required only when registering seller",
                                        "type": "string",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Seller registered successful."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "400": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "DB Error: ..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/auth/verify/email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send email verification link",
                "description": "Sends a verification link to the authenticated user's email address.",
                "operationId": "sendEmailVerification",
                "responses": {
                    "200": {
                        "description": "Verification link sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Verification link sent to your email"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email already verified"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/reports/profit/analysis": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get weekly profit/loss for the current month",
                "description": "Retrieve the weekly profit or loss for the authenticated seller's stores. Profit is calculated as total sales minus total expenses per week.",
                "operationId": "profitAnalysisReport",
                "responses": {
                    "200": {
                        "description": "Weekly profit/loss report",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Weekly profit/loss for current month"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "week_1": {
                                                    "type": "number",
                                                    "example": 2300
                                                },
                                                "week_2": {
                                                    "type": "number",
                                                    "example": -3232
                                                },
                                                "week_3": {
                                                    "type": "number",
                                                    "example": 0
                                                },
                                                "week_4": {
                                                    "type": "number",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/reports/sales/performance": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get sales and expenses performance for the current month",
                "description": "Retrieve the total sales and total expenses of the authenticated seller's stores, grouped by week for the current month.",
                "operationId": "salesPerformanceReport",
                "responses": {
                    "200": {
                        "description": "Sales and expenses report",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sales vs expenses for current month"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "sales": {
                                                    "properties": {
                                                        "week_1": {
                                                            "type": "number",
                                                            "example": 23000
                                                        },
                                                        "week_2": {
                                                            "type": "number",
                                                            "example": 343400
                                                        },
                                                        "week_3": {
                                                            "type": "number",
                                                            "example": 0
                                                        },
                                                        "week_4": {
                                                            "type": "number",
                                                            "example": 0
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "expenses": {
                                                    "properties": {
                                                        "week_1": {
                                                            "type": "number",
                                                            "example": 15000
                                                        },
                                                        "week_2": {
                                                            "type": "number",
                                                            "example": 123400
                                                        },
                                                        "week_3": {
                                                            "type": "number",
                                                            "example": 0
                                                        },
                                                        "week_4": {
                                                            "type": "number",
                                                            "example": 0
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/reports/credit/score": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get monthly credit score trend for the seller",
                "description": "Retrieve the monthly credit score, revenue, orders, refunds, and late shipments for the authenticated seller from January to the current month.",
                "operationId": "creditScoreReport",
                "responses": {
                    "200": {
                        "description": "Monthly credit score trend",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Monthly credit score trend"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "month": {
                                                        "type": "string",
                                                        "example": "2025-01"
                                                    },
                                                    "month_abbr": {
                                                        "type": "string",
                                                        "example": "Jan"
                                                    },
                                                    "credit_score": {
                                                        "type": "integer",
                                                        "example": 85
                                                    },
                                                    "total_revenue": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 125000
                                                    },
                                                    "orders": {
                                                        "type": "integer",
                                                        "example": 42
                                                    },
                                                    "refunds": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "late_shipments": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/reports/inventory": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Inventory health report",
                "description": "Provides a summary of current stock levels and inventory value per product category for the authenticated seller.",
                "operationId": "getInventoryReport",
                "responses": {
                    "200": {
                        "description": "Inventory report retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Inventory health report"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "stock_levels": {
                                                    "description": "Total quantity in stock for each category",
                                                    "type": "object",
                                                    "example": {
                                                        "Electronics": 250,
                                                        "Clothing": 120
                                                    }
                                                },
                                                "inventory_value": {
                                                    "description": "Total inventory value (quantity × price) per category",
                                                    "type": "object",
                                                    "example": {
                                                        "Electronics": 45500.75,
                                                        "Clothing": 8700
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/products/{id}/reviews": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get reviews for a product",
                "description": "Retrieve all reviews for a specific product, optionally including reviewer info.",
                "operationId": "getProductReviews",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reviews retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Reviews for product"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Review"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid user state or database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Add a review to a product",
                "description": "Submit a rating and review for a specific product. Users can only review a product once.",
                "operationId": "storeProductReview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to review",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rating",
                                    "review"
                                ],
                                "properties": {
                                    "rating": {
                                        "description": "Rating from 1 to 5",
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2,
                                            3,
                                            4,
                                            5
                                        ],
                                        "example": 5
                                    },
                                    "review": {
                                        "description": "Textual review",
                                        "type": "string",
                                        "example": "Great product!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Review added successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Review"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User has already reviewed this product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "product not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid product state or database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "product not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/stores/{id}/reviews": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Get reviews for a store",
                "description": "Retrieve all reviews for a specific store, optionally including reviewer info.",
                "operationId": "getStoreReviews",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the store",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reviews retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Reviews for store"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Review"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid user state or database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Stores"
                ],
                "summary": "Add a review to a store",
                "description": "Submit a rating and review for a specific store. Users can only review a store once.",
                "operationId": "storeStoreReview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the store to review",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rating",
                                    "review"
                                ],
                                "properties": {
                                    "rating": {
                                        "description": "Rating from 1 to 5",
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2,
                                            3,
                                            4,
                                            5
                                        ],
                                        "example": 5
                                    },
                                    "review": {
                                        "description": "Textual review",
                                        "type": "string",
                                        "example": "Excellent service!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Review added successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Review"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User has already reviewed this store",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid user state or database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/academy/{id}/reviews": {
            "get": {
                "tags": [
                    "Academy"
                ],
                "summary": "Get reviews for a Academy",
                "description": "Retrieve all reviews for a specific Academy, optionally including reviewer info.",
                "operationId": "getAcademyReviews",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Academy",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reviews retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Reviews for Academy Lesson"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Review"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid user state or database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Academy Lesson not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Academy"
                ],
                "summary": "Add a review to a academy",
                "description": "Submit a rating and review for a specific academy. Users can only review a academy once.",
                "operationId": "storeAcademyReview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Academy Lesson to review",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rating",
                                    "review"
                                ],
                                "properties": {
                                    "rating": {
                                        "description": "Rating from 1 to 5",
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2,
                                            3,
                                            4,
                                            5
                                        ],
                                        "example": 5
                                    },
                                    "review": {
                                        "description": "Textual review",
                                        "type": "string",
                                        "example": "Excellent service!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Review added successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Review"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User has already reviewed this store",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid user state or database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/dashboard/sales/stats": {
            "get": {
                "tags": [
                    "Seller Dashboard"
                ],
                "summary": "Get sales dashboard for the authenticated seller",
                "description": "Retrieve today's sales, pending sales, and total transactions for the current month",
                "operationId": "52dad2cd559e17789f5df1af76388561",
                "responses": {
                    "200": {
                        "description": "Sales dashboard retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sales dashboard"
                                        },
                                        "data": {
                                            "properties": {
                                                "today_sales": {
                                                    "properties": {
                                                        "amount": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 1200.5
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 12.5
                                                                },
                                                                "nature": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "positive",
                                                                        "negative",
                                                                        "neutral"
                                                                    ],
                                                                    "example": "positive"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "pending": {
                                                    "properties": {
                                                        "amount": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 500
                                                        },
                                                        "count": {
                                                            "type": "integer",
                                                            "example": 3
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "total_transaction": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 4500.75
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/sales": {
            "get": {
                "tags": [
                    "Sales"
                ],
                "summary": "List sales for authenticated seller",
                "description": "Retrieve a paginated list of sales for the currently authenticated seller, with optional search and status filters",
                "operationId": "listSales",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Filter by buyer name or sale ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by sale status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "pending"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of sales retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of sales"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "buyer_name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "completed"
                                                            },
                                                            "total_amount": {
                                                                "type": "number",
                                                                "example": 199.99
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-09-14T12:00:00Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 100
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Sales"
                ],
                "summary": "Create a new sale (single or multiple products)",
                "description": "Creates a sale record with one or more products on the current active store. \n     *                  Deducts stock and records inventory ledger entries if status is `completed`.",
                "operationId": "dfb5258201d9aae6151ea5593709a02e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "store_id",
                                    "sales_date",
                                    "sales_time",
                                    "status",
                                    "products"
                                ],
                                "properties": {
                                    "store_id": {
                                        "description": "Store ID where the sale occurs",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "payment_method_id": {
                                        "type": "integer",
                                        "example": 2,
                                        "nullable": true
                                    },
                                    "buyer_name": {
                                        "type": "string",
                                        "example": "John Doe",
                                        "nullable": true
                                    },
                                    "sales_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-09-20"
                                    },
                                    "sales_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "15:30:00"
                                    },
                                    "payment_type": {
                                        "type": "string",
                                        "example": "cash"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "completed"
                                        ],
                                        "example": "completed"
                                    },
                                    "products": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "product_id",
                                                "price",
                                                "quantity"
                                            ],
                                            "properties": {
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 100.5
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sale recorded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sale recorded successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "sale_ref": {
                                                    "type": "string",
                                                    "example": "SAL650FAB12"
                                                },
                                                "sale_products": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "product_id": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "quantity": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 100.5
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/sales/bulk": {
            "post": {
                "tags": [
                    "Sales"
                ],
                "summary": "Upload an Excel file to create multiple sales records",
                "description": "Accepts an Excel file (.xlsx or .csv) that contains multiple sales with their products.  \n * Each row represents a single sale line item. The API groups rows with the same `sale_ref` into one sale.",
                "operationId": "storeBulkSales",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "description": "Excel or CSV file containing the sales data",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Bulk sales stored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bulk sales stored successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Sale"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/sales/{id}": {
            "get": {
                "tags": [
                    "Sales"
                ],
                "summary": "Get sale details",
                "description": "Retrieve detailed information about a specific sale, including the seller, products, and associated store",
                "operationId": "getSale",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the sale",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sale details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sale details"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "buyer_name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "total_amount": {
                                                    "type": "number",
                                                    "example": 199.99
                                                },
                                                "seller": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Seller Name"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "store": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Store Name"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "products": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 10
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Product Name"
                                                            },
                                                            "quantity": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "example": 99.99
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-14T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sale not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sale not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Global search for products and stores",
                "description": "Search across products and stores that are marked as online.",
                "operationId": "179dd19869bd77bf830ec567d551930e",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search keyword",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "shoes"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of results to return per type (default: 10)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Search results"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "query": {
                                                    "type": "string",
                                                    "example": "shoes"
                                                },
                                                "products": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 12
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Running Shoe"
                                                            },
                                                            "store_id": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 49.99
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "stores": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Sports Hub"
                                                            },
                                                            "slug": {
                                                                "type": "string",
                                                                "example": "sports-hub"
                                                            },
                                                            "category_id": {
                                                                "type": "integer",
                                                                "example": 3
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },
        "/dashboard/seller/overview/stats": {
            "get": {
                "tags": [
                    "Seller Dashboard"
                ],
                "summary": "These are statistics on the first overview page on the seller dashboard.",
                "description": "Returns key performance metrics for the authenticated seller (sales, expenses, products, customers) including month-over-month percentage changes.",
                "operationId": "getDashboardOverviewStats",
                "responses": {
                    "200": {
                        "description": "Dashboard summary retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dashboard summary"
                                        },
                                        "data": {
                                            "properties": {
                                                "sales": {
                                                    "properties": {
                                                        "value": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 12345.67
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 12.5
                                                                },
                                                                "nature": {
                                                                    "type": "string",
                                                                    "example": "positive"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "month"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "expenses": {
                                                    "properties": {
                                                        "value": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 2345.67
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 8.3
                                                                },
                                                                "nature": {
                                                                    "type": "string",
                                                                    "example": "negative"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "month"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "products": {
                                                    "properties": {
                                                        "value": {
                                                            "type": "integer",
                                                            "example": 150
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 5.2
                                                                },
                                                                "nature": {
                                                                    "type": "string",
                                                                    "example": "positive"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "month"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "customers": {
                                                    "properties": {
                                                        "value": {
                                                            "type": "integer",
                                                            "example": 80
                                                        },
                                                        "percent": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 3.1
                                                                },
                                                                "nature": {
                                                                    "type": "string",
                                                                    "example": "negative"
                                                                },
                                                                "duration": {
                                                                    "type": "string",
                                                                    "example": "month"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/reports/seller/top-categories": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Get top categories by sales contribution",
                "description": "Fetches categories with their total sales amount and percentage contribution based on sales data.",
                "operationId": "8e7312aa0e99d5bfc985e05f3e190c7e",
                "responses": {
                    "200": {
                        "description": "Top categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Top categories by sales contribution"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Electronics"
                                                    },
                                                    "total_amount": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 1520000.5
                                                    },
                                                    "percentage": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 37.5
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error: something went wrong"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dashboard/seller/overview/recent-sales": {
            "get": {
                "tags": [
                    "Seller Dashboard"
                ],
                "summary": "Get recent sales",
                "description": "Fetches the 5 most recent sales of the authenticated seller, including products in each sale.",
                "operationId": "407d4c3ba06d5442b045a20991c0b890",
                "responses": {
                    "200": {
                        "description": "Recent sales retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of 5 recent sales"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 12
                                                    },
                                                    "buyer_name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "amount": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 250000
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "completed"
                                                    },
                                                    "products": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 45
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "Wireless Mouse"
                                                                },
                                                                "price": {
                                                                    "type": "number",
                                                                    "format": "float",
                                                                    "example": 50000
                                                                },
                                                                "quantity": {
                                                                    "type": "integer",
                                                                    "example": 2
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                }
            }
        },
        "/dashboard/overview/low-stock": {
            "get": {
                "tags": [
                    "Seller Dashboard"
                ],
                "summary": "Get low stock products",
                "description": "Retrieve a list of products that are below their low stock threshold for the authenticated seller's active store.",
                "operationId": "de442380b04f5b694aa0c147b026b187",
                "responses": {
                    "200": {
                        "description": "Low stock products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Low stock products retrieved"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "product_id": {
                                                        "type": "integer",
                                                        "example": 15
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Wireless Mouse"
                                                    },
                                                    "sku": {
                                                        "type": "string",
                                                        "example": "WM-001"
                                                    },
                                                    "stock_balance": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "threshold": {
                                                        "type": "integer",
                                                        "example": 10
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/stores": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "List all online stores",
                "description": "Returns a list of stores that are currently online.  \n     *                  If a valid bearer token is provided, each store will include an `is_follow` flag\n     *                  indicating whether the authenticated user follows that store.",
                "operationId": "986ef8c4a34758b068c149cddcb4f81a",
                "responses": {
                    "200": {
                        "description": "List of online stores",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store listings"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 15
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "City Electronics"
                                                    },
                                                    "subtitle": {
                                                        "type": "string",
                                                        "example": "Best gadgets in town"
                                                    },
                                                    "thumbnail": {
                                                        "type": "string",
                                                        "example": "https://example.com/images/store-thumb.jpg"
                                                    },
                                                    "address": {
                                                        "type": "string",
                                                        "example": "123 Main Street"
                                                    },
                                                    "region": {
                                                        "type": "string",
                                                        "example": "Dar es Salaam",
                                                        "nullable": true
                                                    },
                                                    "category": {
                                                        "type": "string",
                                                        "example": "Vifaa vya umeme",
                                                        "nullable": true
                                                    },
                                                    "country": {
                                                        "type": "string",
                                                        "example": "Tanzania",
                                                        "nullable": true
                                                    },
                                                    "rating": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 4.7
                                                    },
                                                    "reviews_count": {
                                                        "type": "integer",
                                                        "example": 23
                                                    },
                                                    "is_follow": {
                                                        "type": "boolean",
                                                        "example": false
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Stores"
                ],
                "summary": "Create a new store (sellers only)",
                "description": "Allows an authenticated **seller** to create a new store.  \n     *                  The authenticated user must have their account name and email set before creating a store.",
                "operationId": "1e27e6326d19f0b67198d3bebd2ddba2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "category_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "City Electronics"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Wide range of electronics and gadgets.",
                                        "nullable": true
                                    },
                                    "subtitle": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Best gadgets in town",
                                        "nullable": true
                                    },
                                    "thumbnail": {
                                        "description": "Store thumbnail image (max 2 MB)",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "is_online": {
                                        "type": "boolean",
                                        "example": true,
                                        "nullable": true
                                    },
                                    "contact_mobile": {
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "+255700000000",
                                        "nullable": true
                                    },
                                    "contact_email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "info@cityelectronics.tz",
                                        "nullable": true
                                    },
                                    "whatsapp": {
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "+255700000000",
                                        "nullable": true
                                    },
                                    "shipping_origin": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Dar es Salaam Warehouse",
                                        "nullable": true
                                    },
                                    "region_id": {
                                        "type": "integer",
                                        "example": 5,
                                        "nullable": true
                                    },
                                    "address": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "123 Main Street, Dar es Salaam",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Store created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store created successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "data": {
                                            "description": "Created store object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "City Electronics"
                                                },
                                                "category_id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "thumbnail": {
                                                    "type": "string",
                                                    "example": "store_thumbnails/abc123.jpg"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid user state or database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Please set your account name and email before adding a store."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/stores/{id}": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Get store details",
                "description": "Returns detailed information about a store, including followers count, average rating, and reviews count.  \n     *                  Authentication is optional; if a valid bearer token is provided, `is_follow` indicates whether the user follows this store.",
                "operationId": "b8e07f74458951b6a241e9ef33ae5a33",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the store to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store details"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 12
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "City Electronics"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Best gadgets in town"
                                                },
                                                "followers_count": {
                                                    "type": "integer",
                                                    "example": 150
                                                },
                                                "reviews_count": {
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "Electronics"
                                                },
                                                "rating_avg": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 4.5
                                                },
                                                "is_follow": {
                                                    "type": "boolean",
                                                    "example": false
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Stores"
                ],
                "summary": "Delete a store",
                "description": "Delete a store by its ID for the authenticated seller.",
                "operationId": "deleteStore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the store to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store deleted successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Store"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Stores"
                ],
                "summary": "Update an existing store",
                "description": "Allows the **authenticated seller** who owns the store to update its details.  \n     *                  Only the fields provided in the request will be updated.",
                "operationId": "100387c99a33453f3c8a3b3fd5aea50a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the store to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 25
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Store Name",
                                        "nullable": true
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 4,
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated store description.",
                                        "nullable": true
                                    },
                                    "subtitle": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated subtitle",
                                        "nullable": true
                                    },
                                    "thumbnail": {
                                        "description": "New thumbnail image (max 2 MB)",
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "is_online": {
                                        "type": "boolean",
                                        "example": true,
                                        "nullable": true
                                    },
                                    "contact_mobile": {
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "+255711111111",
                                        "nullable": true
                                    },
                                    "contact_email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "newcontact@store.tz",
                                        "nullable": true
                                    },
                                    "whatsapp": {
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "+255711111111",
                                        "nullable": true
                                    },
                                    "shipping_origin": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated warehouse location",
                                        "nullable": true
                                    },
                                    "region_id": {
                                        "type": "integer",
                                        "example": 6,
                                        "nullable": true
                                    },
                                    "address": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "456 New Street, Dodoma",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Store updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store updated successfully"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "description": "Updated store object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Updated Store Name"
                                                },
                                                "thumbnail": {
                                                    "type": "string",
                                                    "example": "store_thumbnails/newimage.jpg"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found or not owned by authenticated seller",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store not found or unauthorized"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/stores/{id}/online-status": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Get store online status",
                "description": "Returns a boolean flag indicating whether the specified store is currently online.",
                "operationId": "86e2f5608748a9cb86d3af68c741adfc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the store to check",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Online status retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Online status"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "is_online": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "store not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Stores"
                ],
                "summary": "Toggle store online status",
                "description": "Toggles the store's online/offline status. Only the authenticated seller who owns the store may perform this action.",
                "operationId": "3de7d5fde42f6a1115b98625ed60e77d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the store whose status will be toggled",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store status changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "store status changed successfully."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User is not authorized to change this store",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to change this store."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 403
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "store not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/stores/{id}/detailed": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Get detailed information about a store",
                "description": "Returns full store details (followers, owner user, products, region, category, and reviews) for a store that is currently online. \n     *                  Records a visit with optional authenticated user data if a bearer token is provided.",
                "operationId": "145d933021f1349aa09f9efb8b351eff",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the store to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store details"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "description": "Full store object with related models",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 42
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Downtown Electronics"
                                                },
                                                "is_online": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "followers": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "buyer_id": {
                                                                "type": "integer",
                                                                "example": 17
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Jane Seller"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "products": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 101
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "4K TV"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "region": {
                                                    "type": "object"
                                                },
                                                "category": {
                                                    "type": "object"
                                                },
                                                "reviews": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found or not online",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/stores/active-store": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Get the seller's active store",
                "description": "Returns details of the currently active store for the authenticated seller.",
                "operationId": "6872740c79a268d3c578c5590fd26cde",
                "responses": {
                    "200": {
                        "description": "Active store details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Active Store details"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Main Outlet"
                                                },
                                                "slug": {
                                                    "type": "string",
                                                    "example": "main-outlet"
                                                },
                                                "is_online": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Seller account not set",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Seller account not set."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Stores"
                ],
                "summary": "Update the seller's active store",
                "description": "Sets a different store as the authenticated seller's active store.",
                "operationId": "b912e2326cfddb4e83e5bbd76701379f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "store_id"
                                ],
                                "properties": {
                                    "store_id": {
                                        "type": "integer",
                                        "example": 7
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Active store updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Active Store Changed successfull."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Seller account not set or store already active",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Can not set same store as active"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/stores/{id}/follows": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "List buyers who follow a store",
                "description": "Returns buyers following the given store. Seller must own the store.",
                "operationId": "bc4056f27693e38c89124b6e7746fc2e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID owned by the authenticated seller",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of followings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "List of followings"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 12
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 34
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "example": "+255700000000"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Stores"
                ],
                "summary": "Follow or unfollow a store",
                "description": "Toggle the follow status for the authenticated buyer.",
                "operationId": "b46795a59db9916a1d6f93d1247aa070",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID to follow or unfollow",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Follow status updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Following status updated."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "followed",
                                                        "unfollowed"
                                                    ],
                                                    "example": "unfollowed"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Store not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/system_settings": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all system settings",
                "description": "Retrieve all system-wide settings, including maintenance mode, auto product approval, SMS and email configurations",
                "operationId": "8fedf65e30428909eecf8c18f63203da",
                "responses": {
                    "200": {
                        "description": "System settings retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "System settings retrieved successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "maintenance_mode": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "auto_product_approval": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "sms_alerts_enabled": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "sms_provider_api_key": {
                                                    "type": "string",
                                                    "example": "encrypted_string"
                                                },
                                                "sms_provider_sender_id": {
                                                    "type": "string",
                                                    "example": "encrypted_string"
                                                },
                                                "email_smtp_host": {
                                                    "type": "string",
                                                    "example": "smtp.mailtrap.io"
                                                },
                                                "email_smtp_port": {
                                                    "type": "integer",
                                                    "example": 587
                                                },
                                                "email_smtp_username": {
                                                    "type": "string",
                                                    "example": "encrypted_string"
                                                },
                                                "email_smtp_password": {
                                                    "type": "string",
                                                    "example": "encrypted_string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update system settings",
                "description": "Update system settings such as maintenance mode, auto product approval, SMS and email configurations. Sensitive values are encrypted automatically",
                "operationId": "26124ed626ebd8d799613dea01058a54",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "maintenance_mode": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "auto_product_approval": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "sms_alerts_enabled": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "sms_provider_api_key": {
                                        "type": "string",
                                        "example": "my_api_key"
                                    },
                                    "sms_provider_sender_id": {
                                        "type": "string",
                                        "example": "SENDER_ID"
                                    },
                                    "email_smtp_host": {
                                        "type": "string",
                                        "example": "smtp.mailtrap.io"
                                    },
                                    "email_smtp_port": {
                                        "type": "integer",
                                        "example": 587
                                    },
                                    "email_smtp_username": {
                                        "type": "string",
                                        "example": "username"
                                    },
                                    "email_smtp_password": {
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "System settings updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "System settings updated successfully."
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to validate fields."
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "List all users",
                "description": "Retrieve a list of all users excluding super admins.",
                "operationId": "7e2f5799553ec93c9c43e2a58490d447",
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Users retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/auth/me": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get authenticated user details",
                "description": "Returns the details of the currently authenticated user based on their API token.",
                "operationId": "c1159084a8d62eecd78febec92568b1d",
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User Details"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/users/{id}": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user status",
                "description": "This is for the Admin to change the status of a specific user (active, inactive, suspended).",
                "operationId": "6055962f27a3fb88a3445c27693dcf5f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive",
                                            "suspended"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User status updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/profile/update": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update authenticated user's profile",
                "description": "Updates the name, email, phone, and/or profile picture of the logged-in user.",
                "operationId": "profileUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Jane Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "jane@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "+255700000000"
                                    },
                                    "profile_pic": {
                                        "description": "JPEG/PNG/GIF/WEBP image, max 2 MB",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 12
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Jane Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "jane@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+255700000000"
                                                },
                                                "profile_pic": {
                                                    "type": "string",
                                                    "example": "storage/profile_pics/1694783948_avatar.jpg"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/users/{id}/profile": {
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update a user's profile (Admin)",
                "description": "Allows an administrator to update any user's name, email, phone, or profile picture.",
                "operationId": "profileUpdateByAdmin",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 42
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "+255700000000"
                                    },
                                    "profile_pic": {
                                        "description": "Optional image file (jpeg, png, jpg, gif, webp), max 2 MB",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 42
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+255700000000"
                                                },
                                                "profile_pic": {
                                                    "type": "string",
                                                    "example": "storage/profile_pics/1694783948_avatar.jpg"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "title": "User",
                "description": "User model schema",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 2
                    },
                    "name": {
                        "type": "string",
                        "example": null,
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": null,
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "example": "+255712345678"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-21T17:26:14.000000Z",
                        "nullable": true
                    },
                    "phone_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-21T17:26:14.000000Z",
                        "nullable": true
                    },
                    "role": {
                        "type": "string",
                        "example": "buyer"
                    },
                    "created_by": {
                        "type": "integer",
                        "example": null,
                        "nullable": true
                    },
                    "deleted_by": {
                        "type": "integer",
                        "example": null,
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive",
                            "suspended",
                            "deleted"
                        ],
                        "example": "active"
                    },
                    "archive": {
                        "description": "Archived user details before deletion",
                        "type": "object",
                        "example": null,
                        "nullable": true
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": null,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-21T17:21:55.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-21T17:26:14.000000Z"
                    }
                },
                "type": "object"
            },
            "Store": {
                "title": "Store",
                "required": [
                    "id",
                    "name",
                    "seller_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Tech Store"
                    },
                    "slug": {
                        "type": "string",
                        "example": "tech-store"
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 3,
                        "nullable": true
                    },
                    "seller_id": {
                        "type": "integer",
                        "example": 15
                    },
                    "description": {
                        "type": "string",
                        "example": "We sell electronics and gadgets.",
                        "nullable": true
                    },
                    "is_online": {
                        "type": "boolean",
                        "example": true
                    },
                    "contact_mobile": {
                        "type": "string",
                        "example": "+255712345678",
                        "nullable": true
                    },
                    "contact_email": {
                        "type": "string",
                        "example": "techstore@example.com",
                        "nullable": true
                    },
                    "whatsapp": {
                        "type": "string",
                        "example": "+255712345678",
                        "nullable": true
                    },
                    "shipping_origin": {
                        "type": "string",
                        "example": "Dar es Salaam",
                        "nullable": true
                    },
                    "region_id": {
                        "type": "integer",
                        "example": 5,
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Market St, Dar es Salaam",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-14T10:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-14T10:00:00Z"
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product",
                "required": [
                    "id",
                    "name",
                    "store_id",
                    "price"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "store_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "name": {
                        "type": "string",
                        "example": "Laptop X"
                    },
                    "slug": {
                        "type": "string",
                        "example": "laptop-x"
                    },
                    "description": {
                        "type": "string",
                        "example": "High-end laptop"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 299.99
                    },
                    "sku": {
                        "type": "string",
                        "example": "LAP12345",
                        "nullable": true
                    },
                    "barcode": {
                        "type": "string",
                        "example": "1234567890123",
                        "nullable": true
                    },
                    "is_online": {
                        "type": "boolean",
                        "example": true
                    },
                    "stock_qty": {
                        "type": "integer",
                        "example": 10,
                        "nullable": true
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "path": {
                                    "type": "string",
                                    "example": "/images/laptop.png"
                                },
                                "is_cover": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "position": {
                                    "type": "integer",
                                    "example": 0
                                }
                            },
                            "type": "object"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-14T10:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-14T10:00:00Z"
                    }
                },
                "type": "object"
            },
            "Sale": {
                "required": [
                    "seller_id",
                    "sale_ref",
                    "amount",
                    "sales_date",
                    "sales_time",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 42
                    },
                    "seller_id": {
                        "description": "ID of the user who recorded the sale",
                        "type": "integer",
                        "format": "int64",
                        "example": 7
                    },
                    "store_id": {
                        "description": "Store where the sale occurred",
                        "type": "integer",
                        "format": "int64",
                        "example": 3,
                        "nullable": true
                    },
                    "sale_ref": {
                        "description": "Unique reference code for this sale",
                        "type": "string",
                        "example": "SAL-2025-0001"
                    },
                    "order_id": {
                        "description": "Linked order if applicable",
                        "type": "integer",
                        "format": "int64",
                        "example": null,
                        "nullable": true
                    },
                    "payment_id": {
                        "description": "Linked payment record if any",
                        "type": "integer",
                        "format": "int64",
                        "example": null,
                        "nullable": true
                    },
                    "payment_method_id": {
                        "description": "Specific payment method used",
                        "type": "integer",
                        "format": "int64",
                        "example": 5,
                        "nullable": true
                    },
                    "payment_type": {
                        "description": "Broad payment category",
                        "type": "string",
                        "enum": [
                            "cash",
                            "mno",
                            "bank",
                            "card"
                        ],
                        "example": "mno"
                    },
                    "buyer_name": {
                        "description": "Name of the buyer/customer",
                        "type": "string",
                        "example": "Jane Doe",
                        "nullable": true
                    },
                    "amount": {
                        "description": "Total sale amount",
                        "type": "number",
                        "format": "double",
                        "example": 1500.75
                    },
                    "sales_date": {
                        "description": "Date of the sale (YYYY-MM-DD)",
                        "type": "string",
                        "format": "date",
                        "example": "2025-09-20"
                    },
                    "sales_time": {
                        "description": "Time of the sale (HH:MM:SS)",
                        "type": "string",
                        "format": "time",
                        "example": "14:30:00"
                    },
                    "status": {
                        "description": "Whether the sale is finalized or awaiting completion",
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed"
                        ],
                        "example": "completed"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-09-20T15:45:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2025-09-20T16:00:00Z"
                    }
                },
                "type": "object"
            },
            "Review": {
                "title": "Review",
                "required": [
                    "user_id",
                    "rating",
                    "review"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "description": "ID of the user who wrote the review",
                        "type": "integer",
                        "example": 5
                    },
                    "rating": {
                        "description": "Rating value from 1 to 5",
                        "type": "integer",
                        "format": "int32",
                        "example": 4
                    },
                    "review": {
                        "description": "Text of the review",
                        "type": "string",
                        "example": "Great product!"
                    },
                    "is_verified_purchase": {
                        "description": "Whether the review is from a verified purchase",
                        "type": "boolean",
                        "example": true
                    },
                    "reviewable_type": {
                        "description": "Polymorphic type of the reviewable entity",
                        "type": "string",
                        "example": "App\\\\Models\\\\Product"
                    },
                    "reviewable_id": {
                        "description": "ID of the reviewable entity",
                        "type": "integer",
                        "example": 10
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-14T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-14T12:00:00Z"
                    },
                    "user": {
                        "description": "The reviewer",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 5
                            },
                            "name": {
                                "type": "string",
                                "example": "John Doe"
                            },
                            "email": {
                                "type": "string",
                                "example": "john@example.com"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ValidationErrorResponse": {
                "properties": {
                    "status": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Failed to validate fields"
                    },
                    "code": {
                        "type": "integer",
                        "example": 422
                    },
                    "errors": {
                        "type": "object",
                        "example": {
                            "key1": [
                                "some field on the request might be required."
                            ],
                            "key2": [
                                "The key 2 is not well formated."
                            ]
                        },
                        "additionalProperties": {
                            "schema": "Controller",
                            "type": "array",
                            "items": {
                                "type": "string",
                                "example": "The field is required."
                            }
                        }
                    }
                },
                "type": "object"
            },
            "Controller": {
                "type": "array",
                "items": {
                    "type": "string",
                    "example": "The field is required."
                }
            }
        },
        "responses": {
            "401": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Unauthorized: Please log in"
                                },
                                "code": {
                                    "type": "integer",
                                    "example": 401
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "403": {
                "description": "Forbidden",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Forbidden: You do not have permission to access this resource."
                                },
                                "code": {
                                    "type": "integer",
                                    "example": 403
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "422": {
                "description": "Unprocessable Content",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ValidationErrorResponse"
                        }
                    }
                }
            },
            "500": {
                "description": "Unprocessable Content",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Error : Something went wrong"
                                },
                                "code": {
                                    "type": "integer",
                                    "example": 500
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Use a valid bearer token",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Location",
            "description": "APIs for managing geographic data including regions, cities, and addresses."
        },
        {
            "name": "Authentication",
            "description": "APIs related to user authentication like login, logout, registration, password updates, etc."
        },
        {
            "name": "Users",
            "description": "User related APIs, specifically designed for the admin to manage its users."
        },
        {
            "name": "Search",
            "description": "Its for the buyer to look for the products or stores from the first page by searching for the name or description.."
        },
        {
            "name": "Categories",
            "description": "APIs to manage categories for stores, products, or any classified data."
        },
        {
            "name": "Stores",
            "description": "APIs to manage stores, their details, and operational information."
        },
        {
            "name": "Inventory",
            "description": "APIs to manage products count in the store. The API's for the Inventory Stock Management for the seller."
        },
        {
            "name": "Products",
            "description": "APIs to manage products, including creation, updates, and retrieval of product details."
        },
        {
            "name": "Cart",
            "description": "APIs to manage cart. Viewing the available cart details, add , removing and adjusting items to Cart and Checkout."
        },
        {
            "name": "Orders",
            "description": "APIs to manage customer orders, including order creation, tracking, and history."
        },
        {
            "name": "Payments",
            "description": "APIs to manage payment processing, payment history, and payment details."
        },
        {
            "name": "Sales",
            "description": "APIs to manage sales, including recording new sales, editing existing ones, and recording in bulk."
        },
        {
            "name": "Expense Types",
            "description": "Before Expenses, there is this API Resource for managing all the types of Expenses."
        },
        {
            "name": "Expenses",
            "description": "This API is for managing all the seller's expenses in their stores. Adding, Editing and Deleting Seller's expenses in a stroe."
        },
        {
            "name": "Payouts",
            "description": "APIs for handling payouts to users, vendors, or other entities."
        },
        {
            "name": "Seller Dashboard",
            "description": "Dashboard APIs for the sellers, showing stats and other important data on the seller panel."
        },
        {
            "name": "Admin Dashboard",
            "description": "Dashboard APIs for the admins, showing stats and other important data on the admin panel."
        },
        {
            "name": "Admin",
            "description": "Endpoints for managing administrative actions such as approving/rejecting instructor applications, overseeing users, and handling system-level operations."
        },
        {
            "name": "Admin Manage Users",
            "description": "Endpoints for managing users, changing user status , editing and deleting."
        },
        {
            "name": "Contacts",
            "description": "APIs to manage contact information of users, customers, or business partners."
        },
        {
            "name": "Academy",
            "description": "APIs related to academy features, including courses, lessons, and instructors."
        },
        {
            "name": "Reports",
            "description": "APIs to generate and fetch system reports, analytics, and insights for various entities."
        },
        {
            "name": "Feedbacks",
            "description": "APIs for sellers to send feedbacks to the admins concerning different situations or suggestions."
        }
    ]
}